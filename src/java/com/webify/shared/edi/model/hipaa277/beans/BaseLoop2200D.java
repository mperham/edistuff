package com.webify.shared.edi.model.hipaa277.beans;

import com.webify.shared.edi.model.*;
import com.webify.shared.edi.model.hipaa277.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import java.io.IOException;
import java.util.*;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class BaseLoop2200D extends EDILoop {

	private static final Log log = LogFactory.getLog(Loop2200D.class);

	private int startLineNumber, endLineNumber;
	public int getStartLineNumber() { return startLineNumber; }
	public int getEndLineNumber() { return endLineNumber; }

	/** Do NOT use this method - it is not public by choice... */
	public void setEndLineNumber(int foo) { endLineNumber = foo; }
	/** Do NOT use this method - it is not public by choice... */
	public void setStartLineNumber(int foo) { startLineNumber = foo; }

	// Segments
	private SegmentTRN_1 Trn;
	public SegmentTRN_1 getTrn() { return Trn; }
	public void setTrn(SegmentTRN_1 seg) { Trn = seg; }

	private SegmentSTC_4 Stc;
	public SegmentSTC_4 getStc() { return Stc; }
	public void setStc(SegmentSTC_4 seg) { Stc = seg; }

	private SegmentREF_1 Ref01;
	public SegmentREF_1 getRef01() { return Ref01; }
	public void setRef01(SegmentREF_1 seg) { Ref01 = seg; }

	private SegmentREF_1 Ref02;
	public SegmentREF_1 getRef02() { return Ref02; }
	public void setRef02(SegmentREF_1 seg) { Ref02 = seg; }

	private SegmentREF_1 Ref03;
	public SegmentREF_1 getRef03() { return Ref03; }
	public void setRef03(SegmentREF_1 seg) { Ref03 = seg; }

	private SegmentDTP_1 Dtp;
	public SegmentDTP_1 getDtp() { return Dtp; }
	public void setDtp(SegmentDTP_1 seg) { Dtp = seg; }


	// Loops
	private List loop2220D;
	public Loop2220D getLoop2220D(int idx) { 
		if (loop2220D == null || idx >= loop2220D.size()) {
			throw new ArrayIndexOutOfBoundsException("loop2220D");
		}
		return (Loop2220D) loop2220D.get(idx);
	}
	public List getLoop2220D() {
		return loop2220D;
	}
	public void setLoop2220D(List loop) { loop2220D = loop; }


	public void parse(EDIInputStream eis) throws IOException {
		if (log.isDebugEnabled()) log.debug("Starting loop 2200D");
		startLineNumber = eis.getCurrentSegmentNumber() + 1;

		if (eis.peekSegment("TRN")) {
			Trn = new SegmentTRN_1();
			Trn.setOrdinal(13);
			Trn.parse(eis);
		}

		if (!eis.peekSegment("STC")) {
			eis.addError("A single instance of Segment STC is required.");
		} else {
			Stc = new SegmentSTC_4();
			Stc.setOrdinal(14);
			Stc.parse(eis);
		}

		if (eis.peekSegment("REF", 1, "1K")) {
			Ref01 = new SegmentREF_1();
			Ref01.setOrdinal(15);
			Ref01.parse(eis);
		}

		if (eis.peekSegment("REF", 1, "BLT")) {
			Ref02 = new SegmentREF_1();
			Ref02.setOrdinal(16);
			Ref02.parse(eis);
		}

		if (eis.peekSegment("REF", 1, "EA")) {
			Ref03 = new SegmentREF_1();
			Ref03.setOrdinal(17);
			Ref03.parse(eis);
		}
		if (eis.peekSegment("REF")) {
			eis.addError("Segment REF could not be parsed.");
			eis.eatSegments("REF");
		}

		if (eis.peekSegment("DTP")) {
			Dtp = new SegmentDTP_1();
			Dtp.setOrdinal(18);
			Dtp.parse(eis);
		}

		while (true) {
			if (eis.peekSegment("SVC")) {
				if (loop2220D == null) loop2220D = new ArrayList();
				Loop2220D tmp = new Loop2220D();
				tmp.parse(eis);
				loop2220D.add(tmp);
			}
			else {
				break;
			}
		}

		endLineNumber = eis.getCurrentSegmentNumber();
		validate(eis);
	}

	public void emit(EDIOutputStream eos) throws IOException {
		if (Trn != null) {
			Trn.emit(eos);
		}

		if (Stc != null) {
			Stc.emit(eos);
		} else {
			eos.addError("Missing mandatory segment 'STC'");
		}

		if (Ref01 != null) {
			Ref01.emit(eos);
		}

		if (Ref02 != null) {
			Ref02.emit(eos);
		}

		if (Ref03 != null) {
			Ref03.emit(eos);
		}

		if (Dtp != null) {
			Dtp.emit(eos);
		}

		if (loop2220D != null) {
			int idx = 0, size = loop2220D.size();
			while (idx < size) {
				getLoop2220D(idx++).emit(eos);
			}
		}

	}

	public EDIElement createCopy() {
		Loop2200D thisCopy = new Loop2200D();
		thisCopy.setStartLineNumber(this.startLineNumber);
		thisCopy.setEndLineNumber(this.endLineNumber);

		if (Trn != null) {
			thisCopy.setTrn((SegmentTRN_1)Trn.createCopy());
		}

		if (Stc != null) {
			thisCopy.setStc((SegmentSTC_4)Stc.createCopy());
		}

		if (Ref01 != null) {
			thisCopy.setRef01((SegmentREF_1)Ref01.createCopy());
		}

		if (Ref02 != null) {
			thisCopy.setRef02((SegmentREF_1)Ref02.createCopy());
		}

		if (Ref03 != null) {
			thisCopy.setRef03((SegmentREF_1)Ref03.createCopy());
		}

		if (Dtp != null) {
			thisCopy.setDtp((SegmentDTP_1)Dtp.createCopy());
		}

		if (loop2220D != null) {
			thisCopy.setLoop2220D(new ArrayList());
			int idx = 0, size = loop2220D.size();
			while (idx < size) {
				thisCopy.getLoop2220D().add(getLoop2220D(idx++).createCopy());
			}
		}

		return thisCopy;
	}

}
