package com.webify.shared.edi.model.hipaa277.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentSTC_3 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentSTC_3.class);

	public static final String SEGMENT_NAME = "STC";
	public static final int FIELD_COUNT = 11;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private CompositeC043 Stc01;
	public CompositeC043 getStc01() { return Stc01; }
	public void setStc01(CompositeC043 val) { Stc01 = val; }

	private Date Stc02;
	public Date getStc02() { return Stc02; }
	public void setStc02(Date val) { Stc02 = val; }

	private java.math.BigDecimal Stc04;
	public java.math.BigDecimal getStc04() { return Stc04; }
	public void setStc04(java.math.BigDecimal val) { Stc04 = val; }

	private java.math.BigDecimal Stc05;
	public java.math.BigDecimal getStc05() { return Stc05; }
	public void setStc05(java.math.BigDecimal val) { Stc05 = val; }

	private CompositeC043 Stc10;
	public CompositeC043 getStc10() { return Stc10; }
	public void setStc10(CompositeC043 val) { Stc10 = val; }

	private CompositeC043 Stc11;
	public CompositeC043 getStc11() { return Stc11; }
	public void setStc11(CompositeC043 val) { Stc11 = val; }


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment STC on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		if (eis.checkBounds(fields, 1, true)) {
			Stc01 = new CompositeC043();
			Stc01.setOrdinal(ordinal + "-" + 1);
			Stc01.parse(eis, fields[1]);
		}
		if (Stc01 == null || "".equals(fields[1].trim())) {
			eis.addError("Field 'STC01' missing");
		}
		Stc02 = eis.getDateValue(fields, 2, true);
		if (Stc02 == null || "".equals(fields[2].trim())) {
			eis.addError("Field 'STC02' missing");
		}
		Stc04 = eis.getDecimalValue(fields, 4, false);
		Stc05 = eis.getDecimalValue(fields, 5, false);
		if (eis.checkBounds(fields, 10, false)) {
			Stc10 = new CompositeC043();
			Stc10.setOrdinal(ordinal + "-" + 10);
			Stc10.parse(eis, fields[10]);
		}
		if (eis.checkBounds(fields, 11, false)) {
			Stc11 = new CompositeC043();
			Stc11.setOrdinal(ordinal + "-" + 11);
			Stc11.parse(eis, fields[11]);
		}
	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("STC");
		if (Stc01 == null) {
			eos.addError("Emitting null mandatory field 'STC01'");
		}

		if (Stc01 != null) {
			Stc01.emit(eos);
		} else {
			eos.writeNullField();
		}
		if (Stc02 == null) {
			eos.addError("Emitting null mandatory field 'STC02'");
		}

		eos.writeField(Stc02);
		eos.writeNullField();
		eos.writeField(Stc04);
		eos.writeField(Stc05);
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		if (Stc10 != null) {
			Stc10.emit(eos);
		} else {
			eos.writeNullField();
		}
		if (Stc11 != null) {
			Stc11.emit(eos);
		} else {
			eos.writeNullField();
		}
		eos.writeNullField();
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentSTC_3 copy = new SegmentSTC_3();
		copy.setLineNumber(this.lineNumber);
		if (getStc01() != null) copy.setStc01((CompositeC043)getStc01().createCopy());
		copy.Stc02 = this.Stc02;
		copy.Stc04 = this.Stc04;
		copy.Stc05 = this.Stc05;
		if (getStc10() != null) copy.setStc10((CompositeC043)getStc10().createCopy());
		if (getStc11() != null) copy.setStc11((CompositeC043)getStc11().createCopy());
		return copy;
	}
}
