package com.webify.shared.edi.model.hipaa835.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentCLP_1 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentCLP_1.class);

	public static final String SEGMENT_NAME = "CLP";
	public static final int FIELD_COUNT = 13;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private String Clp01;
	public String getClp01() { return Clp01; }
	public void setClp01(String val) { Clp01 = val; }

	private String Clp02;
	public String getClp02() { return Clp02; }
	public void setClp02(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'CLP02' may not be null");
		}
		if (Field1029.validateValue(val)) {
			Clp02 = val;
		} else {
			throw new IllegalArgumentException("Field 'CLP02' cannot have value: " + val);
		}
	}

	private java.math.BigDecimal Clp03;
	public java.math.BigDecimal getClp03() { return Clp03; }
	public void setClp03(java.math.BigDecimal val) { Clp03 = val; }

	private java.math.BigDecimal Clp04;
	public java.math.BigDecimal getClp04() { return Clp04; }
	public void setClp04(java.math.BigDecimal val) { Clp04 = val; }

	private java.math.BigDecimal Clp05;
	public java.math.BigDecimal getClp05() { return Clp05; }
	public void setClp05(java.math.BigDecimal val) { Clp05 = val; }

	private String Clp06;
	public String getClp06() { return Clp06; }
	public void setClp06(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'CLP06' may not be null");
		}
		if (Field1032.validateValue(val)) {
			Clp06 = val;
		} else {
			throw new IllegalArgumentException("Field 'CLP06' cannot have value: " + val);
		}
	}

	private String Clp07;
	public String getClp07() { return Clp07; }
	public void setClp07(String val) { Clp07 = val; }

	private String Clp08;
	public String getClp08() { return Clp08; }
	public void setClp08(String val) { Clp08 = val; }

	private String Clp09;
	public String getClp09() { return Clp09; }
	public void setClp09(String val) { Clp09 = val; }

	private String Clp11;
	public String getClp11() { return Clp11; }
	public void setClp11(String val) { Clp11 = val; }

	private java.math.BigDecimal Clp12;
	public java.math.BigDecimal getClp12() { return Clp12; }
	public void setClp12(java.math.BigDecimal val) { Clp12 = val; }

	private java.math.BigDecimal Clp13;
	public java.math.BigDecimal getClp13() { return Clp13; }
	public void setClp13(java.math.BigDecimal val) { Clp13 = val; }


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment CLP on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		Clp01 = eis.getStringValue(fields, 1, 1, 38, true);
		if (Clp01 == null || "".equals(fields[1].trim())) {
			eis.addError("Field 'CLP01' missing");
		}
		Clp02 = eis.getStringValue(fields, 2, 1, 2, true);
		Field1029.validateInputValue(eis, "CLP02", Clp02, ordinal, 2);
		if (Clp02 == null || "".equals(fields[2].trim())) {
			eis.addError("Field 'CLP02' missing");
		}
		Clp03 = eis.getDecimalValue(fields, 3, true);
		if (Clp03 == null || "".equals(fields[3].trim())) {
			eis.addError("Field 'CLP03' missing");
		}
		Clp04 = eis.getDecimalValue(fields, 4, true);
		if (Clp04 == null || "".equals(fields[4].trim())) {
			eis.addError("Field 'CLP04' missing");
		}
		Clp05 = eis.getDecimalValue(fields, 5, false);
		Clp06 = eis.getStringValue(fields, 6, 1, 2, true);
		Field1032.validateInputValue(eis, "CLP06", Clp06, ordinal, 6);
		if (Clp06 == null || "".equals(fields[6].trim())) {
			eis.addError("Field 'CLP06' missing");
		}
		Clp07 = eis.getStringValue(fields, 7, 1, 30, false);
		Clp08 = eis.getStringValue(fields, 8, 1, 2, false);
		Clp09 = eis.getStringValue(fields, 9, 1, 1, false);
		Clp11 = eis.getStringValue(fields, 11, 1, 4, false);
		Clp12 = eis.getDecimalValue(fields, 12, false);
		Clp13 = eis.getDecimalValue(fields, 13, false);
	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("CLP");
		if (Clp01 == null) {
			eos.addError("Emitting null mandatory field 'CLP01'");
		}

		eos.writeField(Clp01);
		if (Clp02 == null) {
			eos.addError("Emitting null mandatory field 'CLP02'");
		}

		eos.writeField(Clp02);
		if (Clp03 == null) {
			eos.addError("Emitting null mandatory field 'CLP03'");
		}

		eos.writeField(Clp03);
		if (Clp04 == null) {
			eos.addError("Emitting null mandatory field 'CLP04'");
		}

		eos.writeField(Clp04);
		eos.writeField(Clp05);
		if (Clp06 == null) {
			eos.addError("Emitting null mandatory field 'CLP06'");
		}

		eos.writeField(Clp06);
		eos.writeField(Clp07);
		eos.writeField(Clp08);
		eos.writeField(Clp09);
		eos.writeNullField();
		eos.writeField(Clp11);
		eos.writeField(Clp12);
		eos.writeField(Clp13);
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentCLP_1 copy = new SegmentCLP_1();
		copy.setLineNumber(this.lineNumber);
		copy.Clp01 = this.Clp01;
		copy.Clp02 = this.Clp02;
		copy.Clp03 = this.Clp03;
		copy.Clp04 = this.Clp04;
		copy.Clp05 = this.Clp05;
		copy.Clp06 = this.Clp06;
		copy.Clp07 = this.Clp07;
		copy.Clp08 = this.Clp08;
		copy.Clp09 = this.Clp09;
		copy.Clp11 = this.Clp11;
		copy.Clp12 = this.Clp12;
		copy.Clp13 = this.Clp13;
		return copy;
	}
}
