package com.webify.shared.edi.model.hipaa837i.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentCN1_1 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentCN1_1.class);

	public static final String SEGMENT_NAME = "CN1";
	public static final int FIELD_COUNT = 6;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private String Cn101;
	public String getCn101() { return Cn101; }
	public void setCn101(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'CN101' may not be null");
		}
		if (Field1166.validateValue(val)) {
			Cn101 = val;
		} else {
			throw new IllegalArgumentException("Field 'CN101' cannot have value: " + val);
		}
	}

	private java.math.BigDecimal Cn102;
	public java.math.BigDecimal getCn102() { return Cn102; }
	public void setCn102(java.math.BigDecimal val) { Cn102 = val; }

	private java.math.BigDecimal Cn103;
	public java.math.BigDecimal getCn103() { return Cn103; }
	public void setCn103(java.math.BigDecimal val) { Cn103 = val; }

	private String Cn104;
	public String getCn104() { return Cn104; }
	public void setCn104(String val) { Cn104 = val; }

	private java.math.BigDecimal Cn105;
	public java.math.BigDecimal getCn105() { return Cn105; }
	public void setCn105(java.math.BigDecimal val) { Cn105 = val; }

	private String Cn106;
	public String getCn106() { return Cn106; }
	public void setCn106(String val) { Cn106 = val; }


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment CN1 on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		Cn101 = eis.getStringValue(fields, 1, 2, 2, true);
		Field1166.validateInputValue(eis, "CN101", Cn101, ordinal, 1);
		if (Cn101 == null || "".equals(fields[1].trim())) {
			eis.addError("Field 'CN101' missing");
		}
		Cn102 = eis.getDecimalValue(fields, 2, false);
		Cn103 = eis.getDecimalValue(fields, 3, false);
		Cn104 = eis.getStringValue(fields, 4, 1, 30, false);
		Cn105 = eis.getDecimalValue(fields, 5, false);
		Cn106 = eis.getStringValue(fields, 6, 1, 30, false);
	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("CN1");
		if (Cn101 == null) {
			eos.addError("Emitting null mandatory field 'CN101'");
		}

		eos.writeField(Cn101);
		eos.writeField(Cn102);
		eos.writeField(Cn103);
		eos.writeField(Cn104);
		eos.writeField(Cn105);
		eos.writeField(Cn106);
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentCN1_1 copy = new SegmentCN1_1();
		copy.setLineNumber(this.lineNumber);
		copy.Cn101 = this.Cn101;
		copy.Cn102 = this.Cn102;
		copy.Cn103 = this.Cn103;
		copy.Cn104 = this.Cn104;
		copy.Cn105 = this.Cn105;
		copy.Cn106 = this.Cn106;
		return copy;
	}
}
