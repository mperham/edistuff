package com.webify.shared.edi.model.hipaa837i.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentSBR_1 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentSBR_1.class);

	public static final String SEGMENT_NAME = "SBR";
	public static final int FIELD_COUNT = 9;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private String Sbr01;
	public String getSbr01() { return Sbr01; }
	public void setSbr01(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'SBR01' may not be null");
		}
		if (Field1138.validateValue(val)) {
			Sbr01 = val;
		} else {
			throw new IllegalArgumentException("Field 'SBR01' cannot have value: " + val);
		}
	}

	private String Sbr02;
	public String getSbr02() { return Sbr02; }
	public void setSbr02(String val) {
		if (Field1069.validateValue(val)) {
			Sbr02 = val;
		} else {
			throw new IllegalArgumentException("Field 'SBR02' cannot have value: " + val);
		}
	}

	private String Sbr03;
	public String getSbr03() { return Sbr03; }
	public void setSbr03(String val) { Sbr03 = val; }

	private String Sbr04;
	public String getSbr04() { return Sbr04; }
	public void setSbr04(String val) { Sbr04 = val; }

	private String Sbr09;
	public String getSbr09() { return Sbr09; }
	public void setSbr09(String val) {
		if (Field1032.validateValue(val)) {
			Sbr09 = val;
		} else {
			throw new IllegalArgumentException("Field 'SBR09' cannot have value: " + val);
		}
	}


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment SBR on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		Sbr01 = eis.getStringValue(fields, 1, 1, 1, true);
		Field1138.validateInputValue(eis, "SBR01", Sbr01, ordinal, 1);
		if (Sbr01 == null || "".equals(fields[1].trim())) {
			eis.addError("Field 'SBR01' missing");
		}
		Sbr02 = eis.getStringValue(fields, 2, 2, 2, false);
		Field1069.validateInputValue(eis, "SBR02", Sbr02, ordinal, 2);
		Sbr03 = eis.getStringValue(fields, 3, 1, 30, false);
		Sbr04 = eis.getStringValue(fields, 4, 1, 60, false);
		Sbr09 = eis.getStringValue(fields, 9, 1, 2, false);
		Field1032.validateInputValue(eis, "SBR09", Sbr09, ordinal, 9);
	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("SBR");
		if (Sbr01 == null) {
			eos.addError("Emitting null mandatory field 'SBR01'");
		}

		eos.writeField(Sbr01);
		eos.writeField(Sbr02);
		eos.writeField(Sbr03);
		eos.writeField(Sbr04);
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		eos.writeField(Sbr09);
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentSBR_1 copy = new SegmentSBR_1();
		copy.setLineNumber(this.lineNumber);
		copy.Sbr01 = this.Sbr01;
		copy.Sbr02 = this.Sbr02;
		copy.Sbr03 = this.Sbr03;
		copy.Sbr04 = this.Sbr04;
		copy.Sbr09 = this.Sbr09;
		return copy;
	}
}
