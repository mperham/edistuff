package com.webify.shared.edi.model.hipaa837i.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentCR6_1 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentCR6_1.class);

	public static final String SEGMENT_NAME = "CR6";
	public static final int FIELD_COUNT = 21;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private String Cr601;
	public String getCr601() { return Cr601; }
	public void setCr601(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'CR601' may not be null");
		}
		if (Field923.validateValue(val)) {
			Cr601 = val;
		} else {
			throw new IllegalArgumentException("Field 'CR601' cannot have value: " + val);
		}
	}

	private Date Cr602;
	public Date getCr602() { return Cr602; }
	public void setCr602(Date val) { Cr602 = val; }

	private String Cr603;
	public String getCr603() { return Cr603; }
	public void setCr603(String val) {
		if (Field1250.validateValue(val)) {
			Cr603 = val;
		} else {
			throw new IllegalArgumentException("Field 'CR603' cannot have value: " + val);
		}
	}

	private String Cr604;
	public String getCr604() { return Cr604; }
	public void setCr604(String val) { Cr604 = val; }

	private Date Cr605;
	public Date getCr605() { return Cr605; }
	public void setCr605(Date val) { Cr605 = val; }

	private String Cr606;
	public String getCr606() { return Cr606; }
	public void setCr606(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'CR606' may not be null");
		}
		if (Field1073.validateValue(val)) {
			Cr606 = val;
		} else {
			throw new IllegalArgumentException("Field 'CR606' cannot have value: " + val);
		}
	}

	private String Cr607;
	public String getCr607() { return Cr607; }
	public void setCr607(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'CR607' may not be null");
		}
		if (Field1073.validateValue(val)) {
			Cr607 = val;
		} else {
			throw new IllegalArgumentException("Field 'CR607' cannot have value: " + val);
		}
	}

	private String Cr608;
	public String getCr608() { return Cr608; }
	public void setCr608(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'CR608' may not be null");
		}
		if (Field1322.validateValue(val)) {
			Cr608 = val;
		} else {
			throw new IllegalArgumentException("Field 'CR608' cannot have value: " + val);
		}
	}

	private Date Cr609;
	public Date getCr609() { return Cr609; }
	public void setCr609(Date val) { Cr609 = val; }

	private String Cr610;
	public String getCr610() { return Cr610; }
	public void setCr610(String val) {
		if (Field235.validateValue(val)) {
			Cr610 = val;
		} else {
			throw new IllegalArgumentException("Field 'CR610' cannot have value: " + val);
		}
	}

	private String Cr611;
	public String getCr611() { return Cr611; }
	public void setCr611(String val) { Cr611 = val; }

	private Date Cr612;
	public Date getCr612() { return Cr612; }
	public void setCr612(Date val) { Cr612 = val; }

	private Date Cr613;
	public Date getCr613() { return Cr613; }
	public void setCr613(Date val) { Cr613 = val; }

	private Date Cr614;
	public Date getCr614() { return Cr614; }
	public void setCr614(Date val) { Cr614 = val; }

	private String Cr615;
	public String getCr615() { return Cr615; }
	public void setCr615(String val) {
		if (Field1250.validateValue(val)) {
			Cr615 = val;
		} else {
			throw new IllegalArgumentException("Field 'CR615' cannot have value: " + val);
		}
	}

	private String Cr616;
	public String getCr616() { return Cr616; }
	public void setCr616(String val) { Cr616 = val; }

	private String Cr617;
	public String getCr617() { return Cr617; }
	public void setCr617(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'CR617' may not be null");
		}
		if (Field1384.validateValue(val)) {
			Cr617 = val;
		} else {
			throw new IllegalArgumentException("Field 'CR617' cannot have value: " + val);
		}
	}

	private Date Cr618;
	public Date getCr618() { return Cr618; }
	public void setCr618(Date val) { Cr618 = val; }

	private Date Cr619;
	public Date getCr619() { return Cr619; }
	public void setCr619(Date val) { Cr619 = val; }

	private Date Cr620;
	public Date getCr620() { return Cr620; }
	public void setCr620(Date val) { Cr620 = val; }

	private Date Cr621;
	public Date getCr621() { return Cr621; }
	public void setCr621(Date val) { Cr621 = val; }


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment CR6 on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		Cr601 = eis.getStringValue(fields, 1, 1, 1, true);
		Field923.validateInputValue(eis, "CR601", Cr601, ordinal, 1);
		if (Cr601 == null || "".equals(fields[1].trim())) {
			eis.addError("Field 'CR601' missing");
		}
		Cr602 = eis.getDateValue(fields, 2, true);
		if (Cr602 == null || "".equals(fields[2].trim())) {
			eis.addError("Field 'CR602' missing");
		}
		Cr603 = eis.getStringValue(fields, 3, 2, 3, false);
		Field1250.validateInputValue(eis, "CR603", Cr603, ordinal, 3);
		Cr604 = eis.getStringValue(fields, 4, 1, 35, false);
		Cr605 = eis.getDateValue(fields, 5, true);
		if (Cr605 == null || "".equals(fields[5].trim())) {
			eis.addError("Field 'CR605' missing");
		}
		Cr606 = eis.getStringValue(fields, 6, 1, 1, true);
		Field1073.validateInputValue(eis, "CR606", Cr606, ordinal, 6);
		if (Cr606 == null || "".equals(fields[6].trim())) {
			eis.addError("Field 'CR606' missing");
		}
		Cr607 = eis.getStringValue(fields, 7, 1, 1, true);
		Field1073.validateInputValue(eis, "CR607", Cr607, ordinal, 7);
		if (Cr607 == null || "".equals(fields[7].trim())) {
			eis.addError("Field 'CR607' missing");
		}
		Cr608 = eis.getStringValue(fields, 8, 1, 1, true);
		Field1322.validateInputValue(eis, "CR608", Cr608, ordinal, 8);
		if (Cr608 == null || "".equals(fields[8].trim())) {
			eis.addError("Field 'CR608' missing");
		}
		Cr609 = eis.getDateValue(fields, 9, false);
		Cr610 = eis.getStringValue(fields, 10, 2, 2, false);
		Field235.validateInputValue(eis, "CR610", Cr610, ordinal, 10);
		Cr611 = eis.getStringValue(fields, 11, 1, 15, false);
		Cr612 = eis.getDateValue(fields, 12, false);
		Cr613 = eis.getDateValue(fields, 13, false);
		Cr614 = eis.getDateValue(fields, 14, false);
		Cr615 = eis.getStringValue(fields, 15, 2, 3, false);
		Field1250.validateInputValue(eis, "CR615", Cr615, ordinal, 15);
		Cr616 = eis.getStringValue(fields, 16, 1, 35, false);
		Cr617 = eis.getStringValue(fields, 17, 1, 1, true);
		Field1384.validateInputValue(eis, "CR617", Cr617, ordinal, 17);
		if (Cr617 == null || "".equals(fields[17].trim())) {
			eis.addError("Field 'CR617' missing");
		}
		Cr618 = eis.getDateValue(fields, 18, false);
		Cr619 = eis.getDateValue(fields, 19, false);
		Cr620 = eis.getDateValue(fields, 20, false);
		Cr621 = eis.getDateValue(fields, 21, false);
		validate(eis);
	}

	protected void validate(EDIInputStream eis) {
		// PAIRED
		{
			int setCount = 0;
			if (Cr603 != null) setCount++;
			if (Cr604 != null) setCount++;
			if (setCount > 0 && setCount < 2) {
				eis.addError("If any of the following properties are set, all must be set: Cr603, Cr604");
			}
		}

		// PAIRED
		{
			int setCount = 0;
			if (Cr609 != null) setCount++;
			if (Cr610 != null) setCount++;
			if (Cr611 != null) setCount++;
			if (setCount > 0 && setCount < 3) {
				eis.addError("If any of the following properties are set, all must be set: Cr609, Cr610, Cr611");
			}
		}

		// PAIRED
		{
			int setCount = 0;
			if (Cr615 != null) setCount++;
			if (Cr616 != null) setCount++;
			if (Cr617 != null) setCount++;
			if (setCount > 0 && setCount < 3) {
				eis.addError("If any of the following properties are set, all must be set: Cr615, Cr616, Cr617");
			}
		}

	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("CR6");
		if (Cr601 == null) {
			eos.addError("Emitting null mandatory field 'CR601'");
		}

		eos.writeField(Cr601);
		if (Cr602 == null) {
			eos.addError("Emitting null mandatory field 'CR602'");
		}

		eos.writeField(Cr602);
		eos.writeField(Cr603);
		eos.writeField(Cr604);
		if (Cr605 == null) {
			eos.addError("Emitting null mandatory field 'CR605'");
		}

		eos.writeField(Cr605);
		if (Cr606 == null) {
			eos.addError("Emitting null mandatory field 'CR606'");
		}

		eos.writeField(Cr606);
		if (Cr607 == null) {
			eos.addError("Emitting null mandatory field 'CR607'");
		}

		eos.writeField(Cr607);
		if (Cr608 == null) {
			eos.addError("Emitting null mandatory field 'CR608'");
		}

		eos.writeField(Cr608);
		eos.writeField(Cr609);
		eos.writeField(Cr610);
		eos.writeField(Cr611);
		eos.writeField(Cr612);
		eos.writeField(Cr613);
		eos.writeField(Cr614);
		eos.writeField(Cr615);
		eos.writeField(Cr616);
		if (Cr617 == null) {
			eos.addError("Emitting null mandatory field 'CR617'");
		}

		eos.writeField(Cr617);
		eos.writeField(Cr618);
		eos.writeField(Cr619);
		eos.writeField(Cr620);
		eos.writeField(Cr621);
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentCR6_1 copy = new SegmentCR6_1();
		copy.setLineNumber(this.lineNumber);
		copy.Cr601 = this.Cr601;
		copy.Cr602 = this.Cr602;
		copy.Cr603 = this.Cr603;
		copy.Cr604 = this.Cr604;
		copy.Cr605 = this.Cr605;
		copy.Cr606 = this.Cr606;
		copy.Cr607 = this.Cr607;
		copy.Cr608 = this.Cr608;
		copy.Cr609 = this.Cr609;
		copy.Cr610 = this.Cr610;
		copy.Cr611 = this.Cr611;
		copy.Cr612 = this.Cr612;
		copy.Cr613 = this.Cr613;
		copy.Cr614 = this.Cr614;
		copy.Cr615 = this.Cr615;
		copy.Cr616 = this.Cr616;
		copy.Cr617 = this.Cr617;
		copy.Cr618 = this.Cr618;
		copy.Cr619 = this.Cr619;
		copy.Cr620 = this.Cr620;
		copy.Cr621 = this.Cr621;
		return copy;
	}
}
