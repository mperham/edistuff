package com.webify.shared.edi.model.hipaa837i.beans;

import com.webify.shared.edi.model.*;
import java.io.IOException;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class CompositeC022_5 implements EDICompositeField {

	public static final String COMPOSITE_NAME = "C022";
	public static final int ELEMENT_COUNT = 5;

	private String ordinal = null;
	void setOrdinal(String ord) { ordinal = ord; }

	// Elements
	private String C022_01;
	public String getC022_01() { return C022_01; }
	public void setC022_01(String val) {
		if (Field1270.validateValue(val)) {
			C022_01 = val;
		} else {
			throw new IllegalArgumentException("Field 'C022_01' cannot have value: " + val);
		}
	}

	private String C022_02;
	public String getC022_02() { return C022_02; }
	public void setC022_02(String val) { C022_02 = val; }

	private java.math.BigDecimal C022_05;
	public java.math.BigDecimal getC022_05() { return C022_05; }
	public void setC022_05(java.math.BigDecimal val) { C022_05 = val; }

	public String[] getElements() {
		String[] values = new String[ELEMENT_COUNT];
		values[0] = EDIUtils.stringValue(C022_01);
		values[1] = EDIUtils.stringValue(C022_02);
		values[4] = EDIUtils.stringValue(C022_05);
		return values;
	}

	public void setElements(String[] values) throws EDIParseException {
		if (values == null || values.length != ELEMENT_COUNT) {
			throw new EDIParseException("values array must be non-null and contain " + ELEMENT_COUNT + " elements");
		}
		C022_01 = EDIUtils.getStringValue(values, 0, 1, 3, true);
		String overrideKey0 = ordinal + "-" + 50;
		Object[] lvalues0 = (Object[]) Field1270.getLegalValues(overrideKey0);
		if (!EDIUtils.validateValue(C022_01, lvalues0)) {
			throw new EDIParseException("Illegal value '" + C022_01 + "' for field C022_01");
		}
		if (C022_01 == null) {
			throw new EDIParseException("Field 'C022_01' is mandatory");
		}
		C022_02 = EDIUtils.getStringValue(values, 1, 1, 30, true);
		if (C022_02 == null) {
			throw new EDIParseException("Field 'C022_02' is mandatory");
		}
		C022_05 = EDIUtils.getDecimalValue(values, 4, true);
		if (C022_05 == null) {
			throw new EDIParseException("Field 'C022_05' is mandatory");
		}
	}

	public void parse(EDIInputStream eis, String fieldValue) throws IOException {
		String[] elements = eis.getCompositeValue(fieldValue, ELEMENT_COUNT);
		C022_01 = eis.getStringValue(elements, 0, 1, 3, true);
		Field1270.validateInputValue(eis, "C022_01", C022_01, ordinal, 50);
		if (C022_01 == null) {
			eis.addError("Field 'C022_01' is mandatory");
		}
		C022_02 = eis.getStringValue(elements, 1, 1, 30, true);
		if (C022_02 == null) {
			eis.addError("Field 'C022_02' is mandatory");
		}
		C022_05 = eis.getDecimalValue(elements, 4, true);
		if (C022_05 == null) {
			eis.addError("Field 'C022_05' is mandatory");
		}
	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startComposite();
		if (C022_01 == null) {
			eos.addError("Emitting null mandatory field 'C022_01'");
		}
		eos.writeElement(C022_01);
		if (C022_02 == null) {
			eos.addError("Emitting null mandatory field 'C022_02'");
		}
		eos.writeElement(C022_02);
		eos.writeNullElement();
		eos.writeNullElement();
		if (C022_05 == null) {
			eos.addError("Emitting null mandatory field 'C022_05'");
		}
		eos.writeElement(C022_05);
		eos.writeNullElement();
		eos.writeNullElement();
		eos.endComposite();
	}

	public EDIElement createCopy() {
		CompositeC022_5 copy = new CompositeC022_5();
		copy.C022_01 = this.C022_01;
		copy.C022_02 = this.C022_02;
		copy.C022_05 = this.C022_05;
		return copy;
	}
}
