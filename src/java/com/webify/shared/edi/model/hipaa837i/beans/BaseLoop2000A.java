package com.webify.shared.edi.model.hipaa837i.beans;

import com.webify.shared.edi.model.*;
import com.webify.shared.edi.model.hipaa837i.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import java.io.IOException;
import java.util.*;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class BaseLoop2000A extends EDILoop {

	private static final Log log = LogFactory.getLog(Loop2000A.class);

	private int startLineNumber, endLineNumber;
	public int getStartLineNumber() { return startLineNumber; }
	public int getEndLineNumber() { return endLineNumber; }

	/** Do NOT use this method - it is not public by choice... */
	public void setEndLineNumber(int foo) { endLineNumber = foo; }
	/** Do NOT use this method - it is not public by choice... */
	public void setStartLineNumber(int foo) { startLineNumber = foo; }

	public static final String[] TRIGGER_VALUES = new String[] {
		"20"
	};

	private List children;
	public void setChildList(List kids) { children = kids; }
	public List getChildList() { 
		if (children == null) return Collections.EMPTY_LIST;
		return children;
	}

	public void addChild(Loop2000B kid) {
		if (children == null) children = new ArrayList();
		children.add(kid);
	}
	public Loop2000B[] getChildren() { 
		List kids = getChildList();
		return (Loop2000B[]) kids.toArray(new Loop2000B[kids.size()]);
	}
	public Loop2000B getChild(int idx) { 
		if (children == null || idx >= children.size()) {
			throw new ArrayIndexOutOfBoundsException(Integer.toString(idx));
		}
		return (Loop2000B) children.get(idx);
	}

	private Hipaa837iDocument parent;
	public Hipaa837iDocument getParent() { return parent; }
	public void setParent(Hipaa837iDocument dad) { parent = dad; }

	// Segments
	private SegmentHL_1 Hl;
	public SegmentHL_1 getHl() { return Hl; }
	public void setHl(SegmentHL_1 seg) { Hl = seg; }

	private SegmentPRV_1 Prv;
	public SegmentPRV_1 getPrv() { return Prv; }
	public void setPrv(SegmentPRV_1 seg) { Prv = seg; }

	private SegmentCUR_1 Cur;
	public SegmentCUR_1 getCur() { return Cur; }
	public void setCur(SegmentCUR_1 seg) { Cur = seg; }


	// Loops
	private Loop2010AA loop2010AA;
	public Loop2010AA getLoop2010AA() { return loop2010AA; }
	public void setLoop2010AA(Loop2010AA loop) { loop2010AA = loop; }

	private Loop2010AB loop2010AB;
	public Loop2010AB getLoop2010AB() { return loop2010AB; }
	public void setLoop2010AB(Loop2010AB loop) { loop2010AB = loop; }


	public void parse(EDIInputStream eis) throws IOException {
		if (log.isDebugEnabled()) log.debug("Starting loop 2000A");
		startLineNumber = eis.getCurrentSegmentNumber() + 1;

		if (!eis.peekSegment("HL")) {
			eis.addError("A single instance of Segment HL is required.");
		} else {
			Hl = new SegmentHL_1();
			Hl.setOrdinal(7);
			Hl.parse(eis);
		}

		if (eis.peekSegment("PRV")) {
			Prv = new SegmentPRV_1();
			Prv.setOrdinal(8);
			Prv.parse(eis);
		}

		if (eis.peekSegment("CUR")) {
			Cur = new SegmentCUR_1();
			Cur.setOrdinal(9);
			Cur.parse(eis);
		}

		while (true) {
			if (eis.peekSegment("NM1", 1, Loop2010AA.TRIGGER_VALUES)) {
				if (loop2010AA != null) {
					eis.addError("Only one instance of Loop 2010AA is allowed.");
				} else {
					loop2010AA = new Loop2010AA();
					loop2010AA.parse(eis);
				}
			}
			else if (eis.peekSegment("NM1", 1, Loop2010AB.TRIGGER_VALUES)) {
				if (loop2010AB != null) {
					eis.addError("Only one instance of Loop 2010AB is allowed.");
				} else {
					loop2010AB = new Loop2010AB();
					loop2010AB.parse(eis);
				}
			}
			else {
				break;
			}
		}

		if (loop2010AA == null) {
			eis.addError("An instance of Loop 2010AA is required.");
		}
		endLineNumber = eis.getCurrentSegmentNumber();
		validate(eis);
	}

	public void emit(EDIOutputStream eos) throws IOException {
		if (Hl != null) {
			Hl.emit(eos);
		} else {
			eos.addError("Missing mandatory segment 'HL'");
		}

		if (Prv != null) {
			Prv.emit(eos);
		}

		if (Cur != null) {
			Cur.emit(eos);
		}

		if (loop2010AA != null) {
			loop2010AA.emit(eos);
		} else {
			eos.addError("Missing mandatory segment 'LOOP2010AA'");
		}

		if (loop2010AB != null) {
			loop2010AB.emit(eos);
		}

	}

	public EDIElement createCopy() {
		Loop2000A thisCopy = new Loop2000A();
		thisCopy.setStartLineNumber(this.startLineNumber);
		thisCopy.setEndLineNumber(this.endLineNumber);

		if (Hl != null) {
			thisCopy.setHl((SegmentHL_1)Hl.createCopy());
		}

		if (Prv != null) {
			thisCopy.setPrv((SegmentPRV_1)Prv.createCopy());
		}

		if (Cur != null) {
			thisCopy.setCur((SegmentCUR_1)Cur.createCopy());
		}

		if (loop2010AA != null) {
			thisCopy.setLoop2010AA((Loop2010AA)loop2010AA.createCopy());
		}

		if (loop2010AB != null) {
			thisCopy.setLoop2010AB((Loop2010AB)loop2010AB.createCopy());
		}

		return thisCopy;
	}

}
