package com.webify.shared.edi.model.hipaa837i.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentCRC_1 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentCRC_1.class);

	public static final String SEGMENT_NAME = "CRC";
	public static final int FIELD_COUNT = 7;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private String Crc01;
	public String getCrc01() { return Crc01; }
	public void setCrc01(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'CRC01' may not be null");
		}
		if (Field1136.validateValue(val)) {
			Crc01 = val;
		} else {
			throw new IllegalArgumentException("Field 'CRC01' cannot have value: " + val);
		}
	}

	private String Crc02;
	public String getCrc02() { return Crc02; }
	public void setCrc02(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'CRC02' may not be null");
		}
		if (Field1073.validateValue(val)) {
			Crc02 = val;
		} else {
			throw new IllegalArgumentException("Field 'CRC02' cannot have value: " + val);
		}
	}

	private String Crc03;
	public String getCrc03() { return Crc03; }
	public void setCrc03(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'CRC03' may not be null");
		}
		if (Field1321.validateValue(val)) {
			Crc03 = val;
		} else {
			throw new IllegalArgumentException("Field 'CRC03' cannot have value: " + val);
		}
	}

	private String Crc04;
	public String getCrc04() { return Crc04; }
	public void setCrc04(String val) {
		if (Field1321.validateValue(val)) {
			Crc04 = val;
		} else {
			throw new IllegalArgumentException("Field 'CRC04' cannot have value: " + val);
		}
	}

	private String Crc05;
	public String getCrc05() { return Crc05; }
	public void setCrc05(String val) {
		if (Field1321.validateValue(val)) {
			Crc05 = val;
		} else {
			throw new IllegalArgumentException("Field 'CRC05' cannot have value: " + val);
		}
	}

	private String Crc06;
	public String getCrc06() { return Crc06; }
	public void setCrc06(String val) {
		if (Field1321.validateValue(val)) {
			Crc06 = val;
		} else {
			throw new IllegalArgumentException("Field 'CRC06' cannot have value: " + val);
		}
	}

	private String Crc07;
	public String getCrc07() { return Crc07; }
	public void setCrc07(String val) {
		if (Field1321.validateValue(val)) {
			Crc07 = val;
		} else {
			throw new IllegalArgumentException("Field 'CRC07' cannot have value: " + val);
		}
	}


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment CRC on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		Crc01 = eis.getStringValue(fields, 1, 2, 2, true);
		Field1136.validateInputValue(eis, "CRC01", Crc01, ordinal, 1);
		if (Crc01 == null || "".equals(fields[1].trim())) {
			eis.addError("Field 'CRC01' missing");
		}
		Crc02 = eis.getStringValue(fields, 2, 1, 1, true);
		Field1073.validateInputValue(eis, "CRC02", Crc02, ordinal, 2);
		if (Crc02 == null || "".equals(fields[2].trim())) {
			eis.addError("Field 'CRC02' missing");
		}
		Crc03 = eis.getStringValue(fields, 3, 2, 2, true);
		Field1321.validateInputValue(eis, "CRC03", Crc03, ordinal, 3);
		if (Crc03 == null || "".equals(fields[3].trim())) {
			eis.addError("Field 'CRC03' missing");
		}
		Crc04 = eis.getStringValue(fields, 4, 2, 2, false);
		Field1321.validateInputValue(eis, "CRC04", Crc04, ordinal, 4);
		Crc05 = eis.getStringValue(fields, 5, 2, 2, false);
		Field1321.validateInputValue(eis, "CRC05", Crc05, ordinal, 5);
		Crc06 = eis.getStringValue(fields, 6, 2, 2, false);
		Field1321.validateInputValue(eis, "CRC06", Crc06, ordinal, 6);
		Crc07 = eis.getStringValue(fields, 7, 2, 2, false);
		Field1321.validateInputValue(eis, "CRC07", Crc07, ordinal, 7);
	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("CRC");
		if (Crc01 == null) {
			eos.addError("Emitting null mandatory field 'CRC01'");
		}

		eos.writeField(Crc01);
		if (Crc02 == null) {
			eos.addError("Emitting null mandatory field 'CRC02'");
		}

		eos.writeField(Crc02);
		if (Crc03 == null) {
			eos.addError("Emitting null mandatory field 'CRC03'");
		}

		eos.writeField(Crc03);
		eos.writeField(Crc04);
		eos.writeField(Crc05);
		eos.writeField(Crc06);
		eos.writeField(Crc07);
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentCRC_1 copy = new SegmentCRC_1();
		copy.setLineNumber(this.lineNumber);
		copy.Crc01 = this.Crc01;
		copy.Crc02 = this.Crc02;
		copy.Crc03 = this.Crc03;
		copy.Crc04 = this.Crc04;
		copy.Crc05 = this.Crc05;
		copy.Crc06 = this.Crc06;
		copy.Crc07 = this.Crc07;
		return copy;
	}
}
