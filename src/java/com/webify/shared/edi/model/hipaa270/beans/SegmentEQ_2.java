package com.webify.shared.edi.model.hipaa270.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentEQ_2 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentEQ_2.class);

	public static final String SEGMENT_NAME = "EQ";
	public static final int FIELD_COUNT = 4;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private String Eq01;
	public String getEq01() { return Eq01; }
	public void setEq01(String val) {
		if (Field1365.validateValue(val)) {
			Eq01 = val;
		} else {
			throw new IllegalArgumentException("Field 'EQ01' cannot have value: " + val);
		}
	}

	private CompositeC003 Eq02;
	public CompositeC003 getEq02() { return Eq02; }
	public void setEq02(CompositeC003 val) { Eq02 = val; }

	private String Eq03;
	public String getEq03() { return Eq03; }
	public void setEq03(String val) {
		if (Field1207.validateValue(val)) {
			Eq03 = val;
		} else {
			throw new IllegalArgumentException("Field 'EQ03' cannot have value: " + val);
		}
	}

	private String Eq04;
	public String getEq04() { return Eq04; }
	public void setEq04(String val) {
		if (Field1336.validateValue(val)) {
			Eq04 = val;
		} else {
			throw new IllegalArgumentException("Field 'EQ04' cannot have value: " + val);
		}
	}


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment EQ on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		Eq01 = eis.getStringValue(fields, 1, 1, 2, false);
		Field1365.validateInputValue(eis, "EQ01", Eq01, ordinal, 1);
		if (eis.checkBounds(fields, 2, false)) {
			Eq02 = new CompositeC003();
			Eq02.setOrdinal(ordinal + "-" + 2);
			Eq02.parse(eis, fields[2]);
		}
		Eq03 = eis.getStringValue(fields, 3, 3, 3, false);
		Field1207.validateInputValue(eis, "EQ03", Eq03, ordinal, 3);
		Eq04 = eis.getStringValue(fields, 4, 1, 3, false);
		Field1336.validateInputValue(eis, "EQ04", Eq04, ordinal, 4);
		validate(eis);
	}

	protected void validate(EDIInputStream eis) {
		// REQUIRE_ONE_OF
		if (Eq01 == null && Eq02 == null) {
			eis.addError("Segment 'Eq' requires at least one field of the following to be set: Eq01, Eq02");
		}

	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("EQ");
		eos.writeField(Eq01);
		if (Eq02 != null) {
			Eq02.emit(eos);
		} else {
			eos.writeNullField();
		}
		eos.writeField(Eq03);
		eos.writeField(Eq04);
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentEQ_2 copy = new SegmentEQ_2();
		copy.setLineNumber(this.lineNumber);
		copy.Eq01 = this.Eq01;
		if (getEq02() != null) copy.setEq02((CompositeC003)getEq02().createCopy());
		copy.Eq03 = this.Eq03;
		copy.Eq04 = this.Eq04;
		return copy;
	}
}
