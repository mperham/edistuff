package com.webify.shared.edi.model.hipaa270.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentPRV_1 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentPRV_1.class);

	public static final String SEGMENT_NAME = "PRV";
	public static final int FIELD_COUNT = 3;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private String Prv01;
	public String getPrv01() { return Prv01; }
	public void setPrv01(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'PRV01' may not be null");
		}
		if (Field1221.validateValue(val)) {
			Prv01 = val;
		} else {
			throw new IllegalArgumentException("Field 'PRV01' cannot have value: " + val);
		}
	}

	private String Prv02;
	public String getPrv02() { return Prv02; }
	public void setPrv02(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'PRV02' may not be null");
		}
		if (Field128.validateValue(val)) {
			Prv02 = val;
		} else {
			throw new IllegalArgumentException("Field 'PRV02' cannot have value: " + val);
		}
	}

	private String Prv03;
	public String getPrv03() { return Prv03; }
	public void setPrv03(String val) { Prv03 = val; }


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment PRV on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		Prv01 = eis.getStringValue(fields, 1, 1, 3, true);
		Field1221.validateInputValue(eis, "PRV01", Prv01, ordinal, 1);
		if (Prv01 == null || "".equals(fields[1].trim())) {
			eis.addError("Field 'PRV01' missing");
		}
		Prv02 = eis.getStringValue(fields, 2, 2, 3, true);
		Field128.validateInputValue(eis, "PRV02", Prv02, ordinal, 2);
		if (Prv02 == null || "".equals(fields[2].trim())) {
			eis.addError("Field 'PRV02' missing");
		}
		Prv03 = eis.getStringValue(fields, 3, 1, 30, true);
		if (Prv03 == null || "".equals(fields[3].trim())) {
			eis.addError("Field 'PRV03' missing");
		}
	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("PRV");
		if (Prv01 == null) {
			eos.addError("Emitting null mandatory field 'PRV01'");
		}

		eos.writeField(Prv01);
		if (Prv02 == null) {
			eos.addError("Emitting null mandatory field 'PRV02'");
		}

		eos.writeField(Prv02);
		if (Prv03 == null) {
			eos.addError("Emitting null mandatory field 'PRV03'");
		}

		eos.writeField(Prv03);
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentPRV_1 copy = new SegmentPRV_1();
		copy.setLineNumber(this.lineNumber);
		copy.Prv01 = this.Prv01;
		copy.Prv02 = this.Prv02;
		copy.Prv03 = this.Prv03;
		return copy;
	}
}
