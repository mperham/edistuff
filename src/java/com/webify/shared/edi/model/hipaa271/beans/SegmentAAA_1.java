package com.webify.shared.edi.model.hipaa271.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentAAA_1 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentAAA_1.class);

	public static final String SEGMENT_NAME = "AAA";
	public static final int FIELD_COUNT = 4;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private String Aaa01;
	public String getAaa01() { return Aaa01; }
	public void setAaa01(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'AAA01' may not be null");
		}
		if (Field1073.validateValue(val)) {
			Aaa01 = val;
		} else {
			throw new IllegalArgumentException("Field 'AAA01' cannot have value: " + val);
		}
	}

	private String Aaa03;
	public String getAaa03() { return Aaa03; }
	public void setAaa03(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'AAA03' may not be null");
		}
		if (Field901.validateValue(val)) {
			Aaa03 = val;
		} else {
			throw new IllegalArgumentException("Field 'AAA03' cannot have value: " + val);
		}
	}

	private String Aaa04;
	public String getAaa04() { return Aaa04; }
	public void setAaa04(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'AAA04' may not be null");
		}
		if (Field889.validateValue(val)) {
			Aaa04 = val;
		} else {
			throw new IllegalArgumentException("Field 'AAA04' cannot have value: " + val);
		}
	}


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment AAA on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		Aaa01 = eis.getStringValue(fields, 1, 1, 1, true);
		Field1073.validateInputValue(eis, "AAA01", Aaa01, ordinal, 1);
		if (Aaa01 == null || "".equals(fields[1].trim())) {
			eis.addError("Field 'AAA01' missing");
		}
		Aaa03 = eis.getStringValue(fields, 3, 2, 2, true);
		Field901.validateInputValue(eis, "AAA03", Aaa03, ordinal, 3);
		if (Aaa03 == null || "".equals(fields[3].trim())) {
			eis.addError("Field 'AAA03' missing");
		}
		Aaa04 = eis.getStringValue(fields, 4, 1, 1, true);
		Field889.validateInputValue(eis, "AAA04", Aaa04, ordinal, 4);
		if (Aaa04 == null || "".equals(fields[4].trim())) {
			eis.addError("Field 'AAA04' missing");
		}
	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("AAA");
		if (Aaa01 == null) {
			eos.addError("Emitting null mandatory field 'AAA01'");
		}

		eos.writeField(Aaa01);
		eos.writeNullField();
		if (Aaa03 == null) {
			eos.addError("Emitting null mandatory field 'AAA03'");
		}

		eos.writeField(Aaa03);
		if (Aaa04 == null) {
			eos.addError("Emitting null mandatory field 'AAA04'");
		}

		eos.writeField(Aaa04);
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentAAA_1 copy = new SegmentAAA_1();
		copy.setLineNumber(this.lineNumber);
		copy.Aaa01 = this.Aaa01;
		copy.Aaa03 = this.Aaa03;
		copy.Aaa04 = this.Aaa04;
		return copy;
	}
}
