package com.webify.shared.edi.model.hipaa271.beans;

import com.webify.shared.edi.model.*;
import com.webify.shared.edi.model.hipaa271.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import java.io.IOException;
import java.util.*;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class BaseLoopUnnamed1 extends EDILoop {

	private static final Log log = LogFactory.getLog(LoopUnnamed1.class);

	private int startLineNumber, endLineNumber;
	public int getStartLineNumber() { return startLineNumber; }
	public int getEndLineNumber() { return endLineNumber; }

	/** Do NOT use this method - it is not public by choice... */
	public void setEndLineNumber(int foo) { endLineNumber = foo; }
	/** Do NOT use this method - it is not public by choice... */
	public void setStartLineNumber(int foo) { startLineNumber = foo; }

	// Segments
	private SegmentLS_1 Ls;
	public SegmentLS_1 getLs() { return Ls; }
	public void setLs(SegmentLS_1 seg) { Ls = seg; }

	private SegmentLE_1 Le;
	public SegmentLE_1 getLe() { return Le; }
	public void setLe(SegmentLE_1 seg) { Le = seg; }


	// Loops
	private Loop2120D loop2120D;
	public Loop2120D getLoop2120D() { return loop2120D; }
	public void setLoop2120D(Loop2120D loop) { loop2120D = loop; }


	public void parse(EDIInputStream eis) throws IOException {
		if (log.isDebugEnabled()) log.debug("Starting loop Unnamed1");
		startLineNumber = eis.getCurrentSegmentNumber() + 1;

		if (eis.peekSegment("LS")) {
			Ls = new SegmentLS_1();
			Ls.setOrdinal(56);
			Ls.parse(eis);
		}

		while (true) {
			if (eis.peekSegment("NM1")) {
				if (loop2120D != null) {
					eis.addError("Only one instance of Loop 2120D is allowed.");
				} else {
					loop2120D = new Loop2120D();
					loop2120D.parse(eis);
				}
			}
			else {
				break;
			}
		}

		if (!eis.peekSegment("LE")) {
			eis.addError("A single instance of Segment LE is required.");
		} else {
			Le = new SegmentLE_1();
			Le.setOrdinal(62);
			Le.parse(eis);
		}

		endLineNumber = eis.getCurrentSegmentNumber();
		validate(eis);
	}

	public void emit(EDIOutputStream eos) throws IOException {
		if (Ls != null) {
			Ls.emit(eos);
		}

		if (loop2120D != null) {
			loop2120D.emit(eos);
		}

		if (Le != null) {
			Le.emit(eos);
		} else {
			eos.addError("Missing mandatory segment 'LE'");
		}

	}

	public EDIElement createCopy() {
		LoopUnnamed1 thisCopy = new LoopUnnamed1();
		thisCopy.setStartLineNumber(this.startLineNumber);
		thisCopy.setEndLineNumber(this.endLineNumber);

		if (Ls != null) {
			thisCopy.setLs((SegmentLS_1)Ls.createCopy());
		}

		if (loop2120D != null) {
			thisCopy.setLoop2120D((Loop2120D)loop2120D.createCopy());
		}

		if (Le != null) {
			thisCopy.setLe((SegmentLE_1)Le.createCopy());
		}

		return thisCopy;
	}

}
