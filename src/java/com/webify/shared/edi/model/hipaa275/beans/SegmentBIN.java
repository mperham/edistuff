package com.webify.shared.edi.model.hipaa275.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentBIN implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentBIN.class);

	public static final String SEGMENT_NAME = "BIN";
	public static final int FIELD_COUNT = 2;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private Integer Bin01;
	public Integer getBin01() { return Bin01; }
	public void setBin01(Integer val) { Bin01 = val; }

	private byte[] Bin02;
	public byte[] getBin02() { return Bin02; }
	public void setBin02(byte[] val) { Bin02 = val; }


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment BIN on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		Bin01 = eis.getIntegerValue(fields, 1, true);
		if (Bin01 == null || "".equals(fields[1].trim())) {
			eis.addError("Field 'BIN01' missing");
		}
		Bin02 = eis.getBinaryValue(fields, 2, true);
		if (Bin02 == null || Bin02.length == 0) {
			eis.addError("Field 'BIN02' missing");
		}
	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("BIN");
		if (Bin01 == null) {
			eos.addError("Emitting null mandatory field 'BIN01'");
		}

		eos.writeField(Bin01);
		if (Bin02 == null) {
			eos.addError("Emitting null mandatory field 'BIN02'");
		}

		eos.writeField(Bin02);
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentBIN copy = new SegmentBIN();
		copy.setLineNumber(this.lineNumber);
		copy.Bin01 = this.Bin01;
		copy.Bin02 = this.Bin02;
		return copy;
	}
}
