package com.webify.shared.edi.model.hipaa275.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentCAT implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentCAT.class);

	public static final String SEGMENT_NAME = "CAT";
	public static final int FIELD_COUNT = 7;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private String Cat01;
	public String getCat01() { return Cat01; }
	public void setCat01(String val) {
		if (Field755.validateValue(val)) {
			Cat01 = val;
		} else {
			throw new IllegalArgumentException("Field 'CAT01' cannot have value: " + val);
		}
	}

	private String Cat02;
	public String getCat02() { return Cat02; }
	public void setCat02(String val) {
		if (Field756.validateValue(val)) {
			Cat02 = val;
		} else {
			throw new IllegalArgumentException("Field 'CAT02' cannot have value: " + val);
		}
	}

	private String Cat03;
	public String getCat03() { return Cat03; }
	public void setCat03(String val) { Cat03 = val; }

	private String Cat04;
	public String getCat04() { return Cat04; }
	public void setCat04(String val) {
		if (Field1270.validateValue(val)) {
			Cat04 = val;
		} else {
			throw new IllegalArgumentException("Field 'CAT04' cannot have value: " + val);
		}
	}

	private String Cat05;
	public String getCat05() { return Cat05; }
	public void setCat05(String val) { Cat05 = val; }

	private String Cat06;
	public String getCat06() { return Cat06; }
	public void setCat06(String val) { Cat06 = val; }

	private String Cat07;
	public String getCat07() { return Cat07; }
	public void setCat07(String val) { Cat07 = val; }


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment CAT on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		Cat01 = eis.getStringValue(fields, 1, 2, 2, false);
		Field755.validateInputValue(eis, "CAT01", Cat01, ordinal, 1);
		Cat02 = eis.getStringValue(fields, 2, 1, 2, false);
		Field756.validateInputValue(eis, "CAT02", Cat02, ordinal, 2);
		Cat03 = eis.getStringValue(fields, 3, 1, 30, false);
		Cat04 = eis.getStringValue(fields, 4, 1, 3, false);
		Field1270.validateInputValue(eis, "CAT04", Cat04, ordinal, 4);
		Cat05 = eis.getStringValue(fields, 5, 1, 30, false);
		Cat06 = eis.getStringValue(fields, 6, 1, 30, false);
		Cat07 = eis.getStringValue(fields, 7, 1, 30, false);
		validate(eis);
	}

	protected void validate(EDIInputStream eis) {
		// CONDITIONAL
		if (Cat03 != null) {
			if (Cat02 == null) {
				eis.addError("If 'Cat03' is set, the following must be set also: Cat02");
			}
		}

		// PAIRED
		{
			int setCount = 0;
			if (Cat04 != null) setCount++;
			if (Cat05 != null) setCount++;
			if (setCount > 0 && setCount < 2) {
				eis.addError("If any of the following properties are set, all must be set: Cat04, Cat05");
			}
		}

		// CONDITIONAL
		if (Cat06 != null) {
			if (Cat05 == null) {
				eis.addError("If 'Cat06' is set, the following must be set also: Cat05");
			}
		}

		// CONDITIONAL
		if (Cat07 != null) {
			if (Cat04 == null) {
				eis.addError("If 'Cat07' is set, the following must be set also: Cat04");
			}
		}

	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("CAT");
		eos.writeField(Cat01);
		eos.writeField(Cat02);
		eos.writeField(Cat03);
		eos.writeField(Cat04);
		eos.writeField(Cat05);
		eos.writeField(Cat06);
		eos.writeField(Cat07);
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentCAT copy = new SegmentCAT();
		copy.setLineNumber(this.lineNumber);
		copy.Cat01 = this.Cat01;
		copy.Cat02 = this.Cat02;
		copy.Cat03 = this.Cat03;
		copy.Cat04 = this.Cat04;
		copy.Cat05 = this.Cat05;
		copy.Cat06 = this.Cat06;
		copy.Cat07 = this.Cat07;
		return copy;
	}
}
