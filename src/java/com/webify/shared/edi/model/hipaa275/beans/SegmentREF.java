package com.webify.shared.edi.model.hipaa275.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentREF implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentREF.class);

	public static final String SEGMENT_NAME = "REF";
	public static final int FIELD_COUNT = 4;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private String Ref01;
	public String getRef01() { return Ref01; }
	public void setRef01(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'REF01' may not be null");
		}
		if (Field128.validateValue(val)) {
			Ref01 = val;
		} else {
			throw new IllegalArgumentException("Field 'REF01' cannot have value: " + val);
		}
	}

	private String Ref02;
	public String getRef02() { return Ref02; }
	public void setRef02(String val) { Ref02 = val; }

	private String Ref03;
	public String getRef03() { return Ref03; }
	public void setRef03(String val) { Ref03 = val; }

	private CompositeC040 Ref04;
	public CompositeC040 getRef04() { return Ref04; }
	public void setRef04(CompositeC040 val) { Ref04 = val; }


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment REF on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		Ref01 = eis.getStringValue(fields, 1, 2, 3, true);
		Field128.validateInputValue(eis, "REF01", Ref01, ordinal, 1);
		if (Ref01 == null || "".equals(fields[1].trim())) {
			eis.addError("Field 'REF01' missing");
		}
		Ref02 = eis.getStringValue(fields, 2, 1, 50, false);
		Ref03 = eis.getStringValue(fields, 3, 1, 80, false);
		if (eis.checkBounds(fields, 4, false)) {
			Ref04 = new CompositeC040();
			Ref04.setOrdinal(ordinal + "-" + 4);
			Ref04.parse(eis, fields[4]);
		}
		validate(eis);
	}

	protected void validate(EDIInputStream eis) {
		// REQUIRE_ONE_OF
		if (Ref02 == null && Ref03 == null) {
			eis.addError("Segment 'Ref' requires at least one field of the following to be set: Ref02, Ref03");
		}

	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("REF");
		if (Ref01 == null) {
			eos.addError("Emitting null mandatory field 'REF01'");
		}

		eos.writeField(Ref01);
		eos.writeField(Ref02);
		eos.writeField(Ref03);
		if (Ref04 != null) {
			Ref04.emit(eos);
		} else {
			eos.writeNullField();
		}
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentREF copy = new SegmentREF();
		copy.setLineNumber(this.lineNumber);
		copy.Ref01 = this.Ref01;
		copy.Ref02 = this.Ref02;
		copy.Ref03 = this.Ref03;
		if (getRef04() != null) copy.setRef04((CompositeC040)getRef04().createCopy());
		return copy;
	}
}
