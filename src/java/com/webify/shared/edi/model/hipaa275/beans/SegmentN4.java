package com.webify.shared.edi.model.hipaa275.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentN4 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentN4.class);

	public static final String SEGMENT_NAME = "N4";
	public static final int FIELD_COUNT = 7;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private String N401;
	public String getN401() { return N401; }
	public void setN401(String val) { N401 = val; }

	private String N402;
	public String getN402() { return N402; }
	public void setN402(String val) { N402 = val; }

	private String N403;
	public String getN403() { return N403; }
	public void setN403(String val) { N403 = val; }

	private String N404;
	public String getN404() { return N404; }
	public void setN404(String val) { N404 = val; }

	private String N405;
	public String getN405() { return N405; }
	public void setN405(String val) {
		if (Field309.validateValue(val)) {
			N405 = val;
		} else {
			throw new IllegalArgumentException("Field 'N405' cannot have value: " + val);
		}
	}

	private String N406;
	public String getN406() { return N406; }
	public void setN406(String val) { N406 = val; }

	private String N407;
	public String getN407() { return N407; }
	public void setN407(String val) { N407 = val; }


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment N4 on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		N401 = eis.getStringValue(fields, 1, 2, 30, false);
		N402 = eis.getStringValue(fields, 2, 2, 2, false);
		N403 = eis.getStringValue(fields, 3, 3, 15, false);
		N404 = eis.getStringValue(fields, 4, 2, 3, false);
		N405 = eis.getStringValue(fields, 5, 1, 2, false);
		Field309.validateInputValue(eis, "N405", N405, ordinal, 5);
		N406 = eis.getStringValue(fields, 6, 1, 30, false);
		N407 = eis.getStringValue(fields, 7, 1, 3, false);
		validate(eis);
	}

	protected void validate(EDIInputStream eis) {
		// EXCLUSIVE
		{
			int setCount = 0;
			if (N402 != null) setCount++;
			if (N407 != null) setCount++;
			if (setCount > 1) {
				eis.addError("Only one of the following properties may be set: N402, N407");
			}
		}

		// CONDITIONAL
		if (N406 != null) {
			if (N405 == null) {
				eis.addError("If 'N406' is set, the following must be set also: N405");
			}
		}

		// CONDITIONAL
		if (N407 != null) {
			if (N404 == null) {
				eis.addError("If 'N407' is set, the following must be set also: N404");
			}
		}

	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("N4");
		eos.writeField(N401);
		eos.writeField(N402);
		eos.writeField(N403);
		eos.writeField(N404);
		eos.writeField(N405);
		eos.writeField(N406);
		eos.writeField(N407);
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentN4 copy = new SegmentN4();
		copy.setLineNumber(this.lineNumber);
		copy.N401 = this.N401;
		copy.N402 = this.N402;
		copy.N403 = this.N403;
		copy.N404 = this.N404;
		copy.N405 = this.N405;
		copy.N406 = this.N406;
		copy.N407 = this.N407;
		return copy;
	}
}
