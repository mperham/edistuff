package com.webify.shared.edi.model.hipaa275.beans;

import com.webify.shared.edi.model.*;
import java.io.IOException;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class CompositeC035 implements EDICompositeField {

	public static final String COMPOSITE_NAME = "C035";
	public static final int ELEMENT_COUNT = 3;

	private String ordinal = null;
	void setOrdinal(String ord) { ordinal = ord; }

	// Elements
	private String C035_01;
	public String getC035_01() { return C035_01; }
	public void setC035_01(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'C035_01' may not be null");
		}
		if (Field1222.validateValue(val)) {
			C035_01 = val;
		} else {
			throw new IllegalArgumentException("Field 'C035_01' cannot have value: " + val);
		}
	}

	private String C035_02;
	public String getC035_02() { return C035_02; }
	public void setC035_02(String val) {
		if (Field559.validateValue(val)) {
			C035_02 = val;
		} else {
			throw new IllegalArgumentException("Field 'C035_02' cannot have value: " + val);
		}
	}

	private String C035_03;
	public String getC035_03() { return C035_03; }
	public void setC035_03(String val) {
		if (Field1073.validateValue(val)) {
			C035_03 = val;
		} else {
			throw new IllegalArgumentException("Field 'C035_03' cannot have value: " + val);
		}
	}

	public String[] getElements() {
		String[] values = new String[ELEMENT_COUNT];
		values[0] = EDIUtils.stringValue(C035_01);
		values[1] = EDIUtils.stringValue(C035_02);
		values[2] = EDIUtils.stringValue(C035_03);
		return values;
	}

	public void setElements(String[] values) throws EDIParseException {
		if (values == null || values.length != ELEMENT_COUNT) {
			throw new EDIParseException("values array must be non-null and contain " + ELEMENT_COUNT + " elements");
		}
		C035_01 = EDIUtils.getStringValue(values, 0, 1, 3, true);
		String overrideKey0 = ordinal + "-" + 108;
		Object[] lvalues0 = (Object[]) Field1222.getLegalValues(overrideKey0);
		if (!EDIUtils.validateValue(C035_01, lvalues0)) {
			throw new EDIParseException("Illegal value '" + C035_01 + "' for field C035_01");
		}
		if (C035_01 == null) {
			throw new EDIParseException("Field 'C035_01' is mandatory");
		}
		C035_02 = EDIUtils.getStringValue(values, 1, 2, 2, false);
		String overrideKey1 = ordinal + "-" + 109;
		Object[] lvalues1 = (Object[]) Field559.getLegalValues(overrideKey1);
		if (!EDIUtils.validateValue(C035_02, lvalues1)) {
			throw new EDIParseException("Illegal value '" + C035_02 + "' for field C035_02");
		}
		C035_03 = EDIUtils.getStringValue(values, 2, 1, 1, false);
		String overrideKey2 = ordinal + "-" + 110;
		Object[] lvalues2 = (Object[]) Field1073.getLegalValues(overrideKey2);
		if (!EDIUtils.validateValue(C035_03, lvalues2)) {
			throw new EDIParseException("Illegal value '" + C035_03 + "' for field C035_03");
		}
	}

	public void parse(EDIInputStream eis, String fieldValue) throws IOException {
		String[] elements = eis.getCompositeValue(fieldValue, ELEMENT_COUNT);
		C035_01 = eis.getStringValue(elements, 0, 1, 3, true);
		Field1222.validateInputValue(eis, "C035_01", C035_01, ordinal, 108);
		if (C035_01 == null) {
			eis.addError("Field 'C035_01' is mandatory");
		}
		C035_02 = eis.getStringValue(elements, 1, 2, 2, false);
		Field559.validateInputValue(eis, "C035_02", C035_02, ordinal, 109);
		C035_03 = eis.getStringValue(elements, 2, 1, 1, false);
		Field1073.validateInputValue(eis, "C035_03", C035_03, ordinal, 110);
	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startComposite();
		if (C035_01 == null) {
			eos.addError("Emitting null mandatory field 'C035_01'");
		}
		eos.writeElement(C035_01);
		eos.writeElement(C035_02);
		eos.writeElement(C035_03);
		eos.endComposite();
	}

	public EDIElement createCopy() {
		CompositeC035 copy = new CompositeC035();
		copy.C035_01 = this.C035_01;
		copy.C035_02 = this.C035_02;
		copy.C035_03 = this.C035_03;
		return copy;
	}
}
