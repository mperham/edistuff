package com.webify.shared.edi.model.hipaa837p.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentCR3_1 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentCR3_1.class);

	public static final String SEGMENT_NAME = "CR3";
	public static final int FIELD_COUNT = 3;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private String Cr301;
	public String getCr301() { return Cr301; }
	public void setCr301(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'CR301' may not be null");
		}
		if (Field1322.validateValue(val)) {
			Cr301 = val;
		} else {
			throw new IllegalArgumentException("Field 'CR301' cannot have value: " + val);
		}
	}

	private String Cr302;
	public String getCr302() { return Cr302; }
	public void setCr302(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'CR302' may not be null");
		}
		if (Field355.validateValue(val)) {
			Cr302 = val;
		} else {
			throw new IllegalArgumentException("Field 'CR302' cannot have value: " + val);
		}
	}

	private java.math.BigDecimal Cr303;
	public java.math.BigDecimal getCr303() { return Cr303; }
	public void setCr303(java.math.BigDecimal val) { Cr303 = val; }


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment CR3 on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		Cr301 = eis.getStringValue(fields, 1, 1, 1, true);
		Field1322.validateInputValue(eis, "CR301", Cr301, ordinal, 1);
		if (Cr301 == null || "".equals(fields[1].trim())) {
			eis.addError("Field 'CR301' missing");
		}
		Cr302 = eis.getStringValue(fields, 2, 2, 2, true);
		Field355.validateInputValue(eis, "CR302", Cr302, ordinal, 2);
		if (Cr302 == null || "".equals(fields[2].trim())) {
			eis.addError("Field 'CR302' missing");
		}
		Cr303 = eis.getDecimalValue(fields, 3, true);
		if (Cr303 == null || "".equals(fields[3].trim())) {
			eis.addError("Field 'CR303' missing");
		}
		validate(eis);
	}

	protected void validate(EDIInputStream eis) {
		// PAIRED
		{
			int setCount = 0;
			if (Cr302 != null) setCount++;
			if (Cr303 != null) setCount++;
			if (setCount > 0 && setCount < 2) {
				eis.addError("If any of the following properties are set, all must be set: Cr302, Cr303");
			}
		}

	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("CR3");
		if (Cr301 == null) {
			eos.addError("Emitting null mandatory field 'CR301'");
		}

		eos.writeField(Cr301);
		if (Cr302 == null) {
			eos.addError("Emitting null mandatory field 'CR302'");
		}

		eos.writeField(Cr302);
		if (Cr303 == null) {
			eos.addError("Emitting null mandatory field 'CR303'");
		}

		eos.writeField(Cr303);
		eos.writeNullField();
		eos.writeNullField();
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentCR3_1 copy = new SegmentCR3_1();
		copy.setLineNumber(this.lineNumber);
		copy.Cr301 = this.Cr301;
		copy.Cr302 = this.Cr302;
		copy.Cr303 = this.Cr303;
		return copy;
	}
}
