package com.webify.shared.edi.model.hipaa837p.beans;

import com.webify.shared.edi.model.*;
import java.io.IOException;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class CompositeC023 implements EDICompositeField {

	public static final String COMPOSITE_NAME = "C023";
	public static final int ELEMENT_COUNT = 3;

	private String ordinal = null;
	void setOrdinal(String ord) { ordinal = ord; }

	// Elements
	private String C023_01;
	public String getC023_01() { return C023_01; }
	public void setC023_01(String val) { C023_01 = val; }

	private String C023_02;
	public String getC023_02() { return C023_02; }
	public void setC023_02(String val) {
		if (Field1332.validateValue(val)) {
			C023_02 = val;
		} else {
			throw new IllegalArgumentException("Field 'C023_02' cannot have value: " + val);
		}
	}

	private String C023_03;
	public String getC023_03() { return C023_03; }
	public void setC023_03(String val) { C023_03 = val; }

	public String[] getElements() {
		String[] values = new String[ELEMENT_COUNT];
		values[0] = EDIUtils.stringValue(C023_01);
		values[1] = EDIUtils.stringValue(C023_02);
		values[2] = EDIUtils.stringValue(C023_03);
		return values;
	}

	public void setElements(String[] values) throws EDIParseException {
		if (values == null || values.length != ELEMENT_COUNT) {
			throw new EDIParseException("values array must be non-null and contain " + ELEMENT_COUNT + " elements");
		}
		C023_01 = EDIUtils.getStringValue(values, 0, 1, 2, false);
		C023_02 = EDIUtils.getStringValue(values, 1, 1, 2, false);
		String overrideKey1 = ordinal + "-" + 58;
		Object[] lvalues1 = (Object[]) Field1332.getLegalValues(overrideKey1);
		if (!EDIUtils.validateValue(C023_02, lvalues1)) {
			throw new EDIParseException("Illegal value '" + C023_02 + "' for field C023_02");
		}
		C023_03 = EDIUtils.getStringValue(values, 2, 1, 1, false);
	}

	public void parse(EDIInputStream eis, String fieldValue) throws IOException {
		String[] elements = eis.getCompositeValue(fieldValue, ELEMENT_COUNT);
		C023_01 = eis.getStringValue(elements, 0, 1, 2, false);
		C023_02 = eis.getStringValue(elements, 1, 1, 2, false);
		Field1332.validateInputValue(eis, "C023_02", C023_02, ordinal, 58);
		C023_03 = eis.getStringValue(elements, 2, 1, 1, false);
	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startComposite();
		eos.writeElement(C023_01);
		eos.writeElement(C023_02);
		eos.writeElement(C023_03);
		eos.endComposite();
	}

	public EDIElement createCopy() {
		CompositeC023 copy = new CompositeC023();
		copy.C023_01 = this.C023_01;
		copy.C023_02 = this.C023_02;
		copy.C023_03 = this.C023_03;
		return copy;
	}
}
