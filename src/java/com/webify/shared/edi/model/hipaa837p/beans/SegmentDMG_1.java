package com.webify.shared.edi.model.hipaa837p.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentDMG_1 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentDMG_1.class);

	public static final String SEGMENT_NAME = "DMG";
	public static final int FIELD_COUNT = 3;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private String Dmg01;
	public String getDmg01() { return Dmg01; }
	public void setDmg01(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'DMG01' may not be null");
		}
		if (Field1250.validateValue(val)) {
			Dmg01 = val;
		} else {
			throw new IllegalArgumentException("Field 'DMG01' cannot have value: " + val);
		}
	}

	private String Dmg02;
	public String getDmg02() { return Dmg02; }
	public void setDmg02(String val) { Dmg02 = val; }

	private String Dmg03;
	public String getDmg03() { return Dmg03; }
	public void setDmg03(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'DMG03' may not be null");
		}
		if (Field1068.validateValue(val)) {
			Dmg03 = val;
		} else {
			throw new IllegalArgumentException("Field 'DMG03' cannot have value: " + val);
		}
	}


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment DMG on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		Dmg01 = eis.getStringValue(fields, 1, 2, 3, true);
		Field1250.validateInputValue(eis, "DMG01", Dmg01, ordinal, 1);
		if (Dmg01 == null || "".equals(fields[1].trim())) {
			eis.addError("Field 'DMG01' missing");
		}
		Dmg02 = eis.getStringValue(fields, 2, 1, 35, true);
		if (Dmg02 == null || "".equals(fields[2].trim())) {
			eis.addError("Field 'DMG02' missing");
		}
		Dmg03 = eis.getStringValue(fields, 3, 1, 1, true);
		Field1068.validateInputValue(eis, "DMG03", Dmg03, ordinal, 3);
		if (Dmg03 == null || "".equals(fields[3].trim())) {
			eis.addError("Field 'DMG03' missing");
		}
		validate(eis);
	}

	protected void validate(EDIInputStream eis) {
		// PAIRED
		{
			int setCount = 0;
			if (Dmg01 != null) setCount++;
			if (Dmg02 != null) setCount++;
			if (setCount > 0 && setCount < 2) {
				eis.addError("If any of the following properties are set, all must be set: Dmg01, Dmg02");
			}
		}

	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("DMG");
		if (Dmg01 == null) {
			eos.addError("Emitting null mandatory field 'DMG01'");
		}

		eos.writeField(Dmg01);
		if (Dmg02 == null) {
			eos.addError("Emitting null mandatory field 'DMG02'");
		}

		eos.writeField(Dmg02);
		if (Dmg03 == null) {
			eos.addError("Emitting null mandatory field 'DMG03'");
		}

		eos.writeField(Dmg03);
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentDMG_1 copy = new SegmentDMG_1();
		copy.setLineNumber(this.lineNumber);
		copy.Dmg01 = this.Dmg01;
		copy.Dmg02 = this.Dmg02;
		copy.Dmg03 = this.Dmg03;
		return copy;
	}
}
