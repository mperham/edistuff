package com.webify.shared.edi.model.hipaa837p.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentSV1_1 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentSV1_1.class);

	public static final String SEGMENT_NAME = "SV1";
	public static final int FIELD_COUNT = 15;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private CompositeC003 Sv101;
	public CompositeC003 getSv101() { return Sv101; }
	public void setSv101(CompositeC003 val) { Sv101 = val; }

	private java.math.BigDecimal Sv102;
	public java.math.BigDecimal getSv102() { return Sv102; }
	public void setSv102(java.math.BigDecimal val) { Sv102 = val; }

	private String Sv103;
	public String getSv103() { return Sv103; }
	public void setSv103(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'SV103' may not be null");
		}
		if (Field355.validateValue(val)) {
			Sv103 = val;
		} else {
			throw new IllegalArgumentException("Field 'SV103' cannot have value: " + val);
		}
	}

	private java.math.BigDecimal Sv104;
	public java.math.BigDecimal getSv104() { return Sv104; }
	public void setSv104(java.math.BigDecimal val) { Sv104 = val; }

	private String Sv105;
	public String getSv105() { return Sv105; }
	public void setSv105(String val) { Sv105 = val; }

	private CompositeC004 Sv107;
	public CompositeC004 getSv107() { return Sv107; }
	public void setSv107(CompositeC004 val) { Sv107 = val; }

	private String Sv109;
	public String getSv109() { return Sv109; }
	public void setSv109(String val) {
		if (Field1073.validateValue(val)) {
			Sv109 = val;
		} else {
			throw new IllegalArgumentException("Field 'SV109' cannot have value: " + val);
		}
	}

	private String Sv111;
	public String getSv111() { return Sv111; }
	public void setSv111(String val) {
		if (Field1073.validateValue(val)) {
			Sv111 = val;
		} else {
			throw new IllegalArgumentException("Field 'SV111' cannot have value: " + val);
		}
	}

	private String Sv112;
	public String getSv112() { return Sv112; }
	public void setSv112(String val) {
		if (Field1073.validateValue(val)) {
			Sv112 = val;
		} else {
			throw new IllegalArgumentException("Field 'SV112' cannot have value: " + val);
		}
	}

	private String Sv115;
	public String getSv115() { return Sv115; }
	public void setSv115(String val) {
		if (Field1327.validateValue(val)) {
			Sv115 = val;
		} else {
			throw new IllegalArgumentException("Field 'SV115' cannot have value: " + val);
		}
	}


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment SV1 on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		if (eis.checkBounds(fields, 1, true)) {
			Sv101 = new CompositeC003();
			Sv101.setOrdinal(ordinal + "-" + 1);
			Sv101.parse(eis, fields[1]);
		}
		if (Sv101 == null || "".equals(fields[1].trim())) {
			eis.addError("Field 'SV101' missing");
		}
		Sv102 = eis.getDecimalValue(fields, 2, true);
		if (Sv102 == null || "".equals(fields[2].trim())) {
			eis.addError("Field 'SV102' missing");
		}
		Sv103 = eis.getStringValue(fields, 3, 2, 2, true);
		Field355.validateInputValue(eis, "SV103", Sv103, ordinal, 3);
		if (Sv103 == null || "".equals(fields[3].trim())) {
			eis.addError("Field 'SV103' missing");
		}
		Sv104 = eis.getDecimalValue(fields, 4, true);
		if (Sv104 == null || "".equals(fields[4].trim())) {
			eis.addError("Field 'SV104' missing");
		}
		Sv105 = eis.getStringValue(fields, 5, 1, 2, false);
		if (eis.checkBounds(fields, 7, false)) {
			Sv107 = new CompositeC004();
			Sv107.setOrdinal(ordinal + "-" + 7);
			Sv107.parse(eis, fields[7]);
		}
		Sv109 = eis.getStringValue(fields, 9, 1, 1, false);
		Field1073.validateInputValue(eis, "SV109", Sv109, ordinal, 9);
		Sv111 = eis.getStringValue(fields, 11, 1, 1, false);
		Field1073.validateInputValue(eis, "SV111", Sv111, ordinal, 11);
		Sv112 = eis.getStringValue(fields, 12, 1, 1, false);
		Field1073.validateInputValue(eis, "SV112", Sv112, ordinal, 12);
		Sv115 = eis.getStringValue(fields, 15, 1, 1, false);
		Field1327.validateInputValue(eis, "SV115", Sv115, ordinal, 15);
		validate(eis);
	}

	protected void validate(EDIInputStream eis) {
		// PAIRED
		{
			int setCount = 0;
			if (Sv103 != null) setCount++;
			if (Sv104 != null) setCount++;
			if (setCount > 0 && setCount < 2) {
				eis.addError("If any of the following properties are set, all must be set: Sv103, Sv104");
			}
		}

	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("SV1");
		if (Sv101 == null) {
			eos.addError("Emitting null mandatory field 'SV101'");
		}

		if (Sv101 != null) {
			Sv101.emit(eos);
		} else {
			eos.writeNullField();
		}
		if (Sv102 == null) {
			eos.addError("Emitting null mandatory field 'SV102'");
		}

		eos.writeField(Sv102);
		if (Sv103 == null) {
			eos.addError("Emitting null mandatory field 'SV103'");
		}

		eos.writeField(Sv103);
		if (Sv104 == null) {
			eos.addError("Emitting null mandatory field 'SV104'");
		}

		eos.writeField(Sv104);
		eos.writeField(Sv105);
		eos.writeNullField();
		if (Sv107 != null) {
			Sv107.emit(eos);
		} else {
			eos.writeNullField();
		}
		eos.writeNullField();
		eos.writeField(Sv109);
		eos.writeNullField();
		eos.writeField(Sv111);
		eos.writeField(Sv112);
		eos.writeNullField();
		eos.writeNullField();
		eos.writeField(Sv115);
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentSV1_1 copy = new SegmentSV1_1();
		copy.setLineNumber(this.lineNumber);
		if (getSv101() != null) copy.setSv101((CompositeC003)getSv101().createCopy());
		copy.Sv102 = this.Sv102;
		copy.Sv103 = this.Sv103;
		copy.Sv104 = this.Sv104;
		copy.Sv105 = this.Sv105;
		if (getSv107() != null) copy.setSv107((CompositeC004)getSv107().createCopy());
		copy.Sv109 = this.Sv109;
		copy.Sv111 = this.Sv111;
		copy.Sv112 = this.Sv112;
		copy.Sv115 = this.Sv115;
		return copy;
	}
}
