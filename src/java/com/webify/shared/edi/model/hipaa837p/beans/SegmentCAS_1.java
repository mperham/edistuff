package com.webify.shared.edi.model.hipaa837p.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentCAS_1 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentCAS_1.class);

	public static final String SEGMENT_NAME = "CAS";
	public static final int FIELD_COUNT = 19;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private String Cas01;
	public String getCas01() { return Cas01; }
	public void setCas01(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'CAS01' may not be null");
		}
		if (Field1033.validateValue(val)) {
			Cas01 = val;
		} else {
			throw new IllegalArgumentException("Field 'CAS01' cannot have value: " + val);
		}
	}

	private String Cas02;
	public String getCas02() { return Cas02; }
	public void setCas02(String val) { Cas02 = val; }

	private java.math.BigDecimal Cas03;
	public java.math.BigDecimal getCas03() { return Cas03; }
	public void setCas03(java.math.BigDecimal val) { Cas03 = val; }

	private java.math.BigDecimal Cas04;
	public java.math.BigDecimal getCas04() { return Cas04; }
	public void setCas04(java.math.BigDecimal val) { Cas04 = val; }

	private String Cas05;
	public String getCas05() { return Cas05; }
	public void setCas05(String val) { Cas05 = val; }

	private java.math.BigDecimal Cas06;
	public java.math.BigDecimal getCas06() { return Cas06; }
	public void setCas06(java.math.BigDecimal val) { Cas06 = val; }

	private java.math.BigDecimal Cas07;
	public java.math.BigDecimal getCas07() { return Cas07; }
	public void setCas07(java.math.BigDecimal val) { Cas07 = val; }

	private String Cas08;
	public String getCas08() { return Cas08; }
	public void setCas08(String val) { Cas08 = val; }

	private java.math.BigDecimal Cas09;
	public java.math.BigDecimal getCas09() { return Cas09; }
	public void setCas09(java.math.BigDecimal val) { Cas09 = val; }

	private java.math.BigDecimal Cas10;
	public java.math.BigDecimal getCas10() { return Cas10; }
	public void setCas10(java.math.BigDecimal val) { Cas10 = val; }

	private String Cas11;
	public String getCas11() { return Cas11; }
	public void setCas11(String val) { Cas11 = val; }

	private java.math.BigDecimal Cas12;
	public java.math.BigDecimal getCas12() { return Cas12; }
	public void setCas12(java.math.BigDecimal val) { Cas12 = val; }

	private java.math.BigDecimal Cas13;
	public java.math.BigDecimal getCas13() { return Cas13; }
	public void setCas13(java.math.BigDecimal val) { Cas13 = val; }

	private String Cas14;
	public String getCas14() { return Cas14; }
	public void setCas14(String val) { Cas14 = val; }

	private java.math.BigDecimal Cas15;
	public java.math.BigDecimal getCas15() { return Cas15; }
	public void setCas15(java.math.BigDecimal val) { Cas15 = val; }

	private java.math.BigDecimal Cas16;
	public java.math.BigDecimal getCas16() { return Cas16; }
	public void setCas16(java.math.BigDecimal val) { Cas16 = val; }

	private String Cas17;
	public String getCas17() { return Cas17; }
	public void setCas17(String val) { Cas17 = val; }

	private java.math.BigDecimal Cas18;
	public java.math.BigDecimal getCas18() { return Cas18; }
	public void setCas18(java.math.BigDecimal val) { Cas18 = val; }

	private java.math.BigDecimal Cas19;
	public java.math.BigDecimal getCas19() { return Cas19; }
	public void setCas19(java.math.BigDecimal val) { Cas19 = val; }


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment CAS on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		Cas01 = eis.getStringValue(fields, 1, 1, 2, true);
		Field1033.validateInputValue(eis, "CAS01", Cas01, ordinal, 1);
		if (Cas01 == null || "".equals(fields[1].trim())) {
			eis.addError("Field 'CAS01' missing");
		}
		Cas02 = eis.getStringValue(fields, 2, 1, 5, true);
		if (Cas02 == null || "".equals(fields[2].trim())) {
			eis.addError("Field 'CAS02' missing");
		}
		Cas03 = eis.getDecimalValue(fields, 3, true);
		if (Cas03 == null || "".equals(fields[3].trim())) {
			eis.addError("Field 'CAS03' missing");
		}
		Cas04 = eis.getDecimalValue(fields, 4, false);
		Cas05 = eis.getStringValue(fields, 5, 1, 5, false);
		Cas06 = eis.getDecimalValue(fields, 6, false);
		Cas07 = eis.getDecimalValue(fields, 7, false);
		Cas08 = eis.getStringValue(fields, 8, 1, 5, false);
		Cas09 = eis.getDecimalValue(fields, 9, false);
		Cas10 = eis.getDecimalValue(fields, 10, false);
		Cas11 = eis.getStringValue(fields, 11, 1, 5, false);
		Cas12 = eis.getDecimalValue(fields, 12, false);
		Cas13 = eis.getDecimalValue(fields, 13, false);
		Cas14 = eis.getStringValue(fields, 14, 1, 5, false);
		Cas15 = eis.getDecimalValue(fields, 15, false);
		Cas16 = eis.getDecimalValue(fields, 16, false);
		Cas17 = eis.getStringValue(fields, 17, 1, 5, false);
		Cas18 = eis.getDecimalValue(fields, 18, false);
		Cas19 = eis.getDecimalValue(fields, 19, false);
		validate(eis);
	}

	protected void validate(EDIInputStream eis) {
		// CONDITIONAL
		if (Cas06 != null) {
			if (Cas05 == null) {
				eis.addError("If 'Cas06' is set, the following must be set also: Cas05");
			}
		}

		// CONDITIONAL
		if (Cas07 != null) {
			if (Cas05 == null) {
				eis.addError("If 'Cas07' is set, the following must be set also: Cas05");
			}
		}

		// CONDITIONAL
		if (Cas09 != null) {
			if (Cas08 == null) {
				eis.addError("If 'Cas09' is set, the following must be set also: Cas08");
			}
		}

		// CONDITIONAL
		if (Cas10 != null) {
			if (Cas08 == null) {
				eis.addError("If 'Cas10' is set, the following must be set also: Cas08");
			}
		}

		// CONDITIONAL
		if (Cas12 != null) {
			if (Cas11 == null) {
				eis.addError("If 'Cas12' is set, the following must be set also: Cas11");
			}
		}

		// CONDITIONAL
		if (Cas13 != null) {
			if (Cas11 == null) {
				eis.addError("If 'Cas13' is set, the following must be set also: Cas11");
			}
		}

		// CONDITIONAL
		if (Cas15 != null) {
			if (Cas14 == null) {
				eis.addError("If 'Cas15' is set, the following must be set also: Cas14");
			}
		}

		// CONDITIONAL
		if (Cas16 != null) {
			if (Cas14 == null) {
				eis.addError("If 'Cas16' is set, the following must be set also: Cas14");
			}
		}

		// CONDITIONAL
		if (Cas18 != null) {
			if (Cas17 == null) {
				eis.addError("If 'Cas18' is set, the following must be set also: Cas17");
			}
		}

		// CONDITIONAL
		if (Cas19 != null) {
			if (Cas17 == null) {
				eis.addError("If 'Cas19' is set, the following must be set also: Cas17");
			}
		}

		// LIST_CONDITIONAL
		if (Cas05 != null) {
			if (Cas06 == null || Cas07 == null) {
				eis.addError("If 'Cas05' is set, the following must be set also: Cas06, Cas07");
			}
		}

		// LIST_CONDITIONAL
		if (Cas08 != null) {
			if (Cas09 == null || Cas10 == null) {
				eis.addError("If 'Cas08' is set, the following must be set also: Cas09, Cas10");
			}
		}

		// LIST_CONDITIONAL
		if (Cas11 != null) {
			if (Cas12 == null || Cas13 == null) {
				eis.addError("If 'Cas11' is set, the following must be set also: Cas12, Cas13");
			}
		}

		// LIST_CONDITIONAL
		if (Cas14 != null) {
			if (Cas15 == null || Cas16 == null) {
				eis.addError("If 'Cas14' is set, the following must be set also: Cas15, Cas16");
			}
		}

		// LIST_CONDITIONAL
		if (Cas17 != null) {
			if (Cas18 == null || Cas19 == null) {
				eis.addError("If 'Cas17' is set, the following must be set also: Cas18, Cas19");
			}
		}

	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("CAS");
		if (Cas01 == null) {
			eos.addError("Emitting null mandatory field 'CAS01'");
		}

		eos.writeField(Cas01);
		if (Cas02 == null) {
			eos.addError("Emitting null mandatory field 'CAS02'");
		}

		eos.writeField(Cas02);
		if (Cas03 == null) {
			eos.addError("Emitting null mandatory field 'CAS03'");
		}

		eos.writeField(Cas03);
		eos.writeField(Cas04);
		eos.writeField(Cas05);
		eos.writeField(Cas06);
		eos.writeField(Cas07);
		eos.writeField(Cas08);
		eos.writeField(Cas09);
		eos.writeField(Cas10);
		eos.writeField(Cas11);
		eos.writeField(Cas12);
		eos.writeField(Cas13);
		eos.writeField(Cas14);
		eos.writeField(Cas15);
		eos.writeField(Cas16);
		eos.writeField(Cas17);
		eos.writeField(Cas18);
		eos.writeField(Cas19);
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentCAS_1 copy = new SegmentCAS_1();
		copy.setLineNumber(this.lineNumber);
		copy.Cas01 = this.Cas01;
		copy.Cas02 = this.Cas02;
		copy.Cas03 = this.Cas03;
		copy.Cas04 = this.Cas04;
		copy.Cas05 = this.Cas05;
		copy.Cas06 = this.Cas06;
		copy.Cas07 = this.Cas07;
		copy.Cas08 = this.Cas08;
		copy.Cas09 = this.Cas09;
		copy.Cas10 = this.Cas10;
		copy.Cas11 = this.Cas11;
		copy.Cas12 = this.Cas12;
		copy.Cas13 = this.Cas13;
		copy.Cas14 = this.Cas14;
		copy.Cas15 = this.Cas15;
		copy.Cas16 = this.Cas16;
		copy.Cas17 = this.Cas17;
		copy.Cas18 = this.Cas18;
		copy.Cas19 = this.Cas19;
		return copy;
	}
}
