package com.webify.shared.edi.model.hipaa837p.beans;

import com.webify.shared.edi.model.*;
import com.webify.shared.edi.model.hipaa837p.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import java.io.IOException;
import java.util.*;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class BaseLoop2300 extends EDILoop {

	private static final Log log = LogFactory.getLog(Loop2300.class);

	private int startLineNumber, endLineNumber;
	public int getStartLineNumber() { return startLineNumber; }
	public int getEndLineNumber() { return endLineNumber; }

	/** Do NOT use this method - it is not public by choice... */
	public void setEndLineNumber(int foo) { endLineNumber = foo; }
	/** Do NOT use this method - it is not public by choice... */
	public void setStartLineNumber(int foo) { startLineNumber = foo; }

	// Segments
	private SegmentCLM_1 Clm;
	public SegmentCLM_1 getClm() { return Clm; }
	public void setClm(SegmentCLM_1 seg) { Clm = seg; }

	private SegmentDTP_1 Dtp01;
	public SegmentDTP_1 getDtp01() { return Dtp01; }
	public void setDtp01(SegmentDTP_1 seg) { Dtp01 = seg; }

	private SegmentDTP_1 Dtp02;
	public SegmentDTP_1 getDtp02() { return Dtp02; }
	public void setDtp02(SegmentDTP_1 seg) { Dtp02 = seg; }

	private SegmentDTP_1 Dtp03;
	public SegmentDTP_1 getDtp03() { return Dtp03; }
	public void setDtp03(SegmentDTP_1 seg) { Dtp03 = seg; }

	private List Dtp04;
	public SegmentDTP_1 getDtp04(int idx) { 
		if (Dtp04 == null || idx >= Dtp04.size()) {
			throw new ArrayIndexOutOfBoundsException("Dtp04");
		}
		return (SegmentDTP_1) Dtp04.get(idx);
	}
	public List getDtp04() {
		return Dtp04;
	}
	public void setDtp04(List segs) { Dtp04 = segs; }

	private List Dtp05;
	public SegmentDTP_1 getDtp05(int idx) { 
		if (Dtp05 == null || idx >= Dtp05.size()) {
			throw new ArrayIndexOutOfBoundsException("Dtp05");
		}
		return (SegmentDTP_1) Dtp05.get(idx);
	}
	public List getDtp05() {
		return Dtp05;
	}
	public void setDtp05(List segs) { Dtp05 = segs; }

	private List Dtp06;
	public SegmentDTP_1 getDtp06(int idx) { 
		if (Dtp06 == null || idx >= Dtp06.size()) {
			throw new ArrayIndexOutOfBoundsException("Dtp06");
		}
		return (SegmentDTP_1) Dtp06.get(idx);
	}
	public List getDtp06() {
		return Dtp06;
	}
	public void setDtp06(List segs) { Dtp06 = segs; }

	private SegmentDTP_1 Dtp07;
	public SegmentDTP_1 getDtp07() { return Dtp07; }
	public void setDtp07(SegmentDTP_1 seg) { Dtp07 = seg; }

	private SegmentDTP_1 Dtp08;
	public SegmentDTP_1 getDtp08() { return Dtp08; }
	public void setDtp08(SegmentDTP_1 seg) { Dtp08 = seg; }

	private SegmentDTP_1 Dtp09;
	public SegmentDTP_1 getDtp09() { return Dtp09; }
	public void setDtp09(SegmentDTP_1 seg) { Dtp09 = seg; }

	private List Dtp10;
	public SegmentDTP_1 getDtp10(int idx) { 
		if (Dtp10 == null || idx >= Dtp10.size()) {
			throw new ArrayIndexOutOfBoundsException("Dtp10");
		}
		return (SegmentDTP_1) Dtp10.get(idx);
	}
	public List getDtp10() {
		return Dtp10;
	}
	public void setDtp10(List segs) { Dtp10 = segs; }

	private List Dtp11;
	public SegmentDTP_1 getDtp11(int idx) { 
		if (Dtp11 == null || idx >= Dtp11.size()) {
			throw new ArrayIndexOutOfBoundsException("Dtp11");
		}
		return (SegmentDTP_1) Dtp11.get(idx);
	}
	public List getDtp11() {
		return Dtp11;
	}
	public void setDtp11(List segs) { Dtp11 = segs; }

	private SegmentDTP_1 Dtp12;
	public SegmentDTP_1 getDtp12() { return Dtp12; }
	public void setDtp12(SegmentDTP_1 seg) { Dtp12 = seg; }

	private SegmentDTP_1 Dtp13;
	public SegmentDTP_1 getDtp13() { return Dtp13; }
	public void setDtp13(SegmentDTP_1 seg) { Dtp13 = seg; }

	private SegmentDTP_1 Dtp14;
	public SegmentDTP_1 getDtp14() { return Dtp14; }
	public void setDtp14(SegmentDTP_1 seg) { Dtp14 = seg; }

	private SegmentDTP_1 Dtp15;
	public SegmentDTP_1 getDtp15() { return Dtp15; }
	public void setDtp15(SegmentDTP_1 seg) { Dtp15 = seg; }

	private List Dtp16;
	public SegmentDTP_1 getDtp16(int idx) { 
		if (Dtp16 == null || idx >= Dtp16.size()) {
			throw new ArrayIndexOutOfBoundsException("Dtp16");
		}
		return (SegmentDTP_1) Dtp16.get(idx);
	}
	public List getDtp16() {
		return Dtp16;
	}
	public void setDtp16(List segs) { Dtp16 = segs; }

	private List Pwk;
	public SegmentPWK_1 getPwk(int idx) { 
		if (Pwk == null || idx >= Pwk.size()) {
			throw new ArrayIndexOutOfBoundsException("Pwk");
		}
		return (SegmentPWK_1) Pwk.get(idx);
	}
	public List getPwk() {
		return Pwk;
	}
	public void setPwk(List segs) { Pwk = segs; }

	private SegmentCN1_1 Cn1;
	public SegmentCN1_1 getCn1() { return Cn1; }
	public void setCn1(SegmentCN1_1 seg) { Cn1 = seg; }

	private SegmentAMT_1 Amt01;
	public SegmentAMT_1 getAmt01() { return Amt01; }
	public void setAmt01(SegmentAMT_1 seg) { Amt01 = seg; }

	private SegmentAMT_1 Amt02;
	public SegmentAMT_1 getAmt02() { return Amt02; }
	public void setAmt02(SegmentAMT_1 seg) { Amt02 = seg; }

	private SegmentAMT_1 Amt03;
	public SegmentAMT_1 getAmt03() { return Amt03; }
	public void setAmt03(SegmentAMT_1 seg) { Amt03 = seg; }

	private SegmentREF_1 Ref01;
	public SegmentREF_1 getRef01() { return Ref01; }
	public void setRef01(SegmentREF_1 seg) { Ref01 = seg; }

	private SegmentREF_1 Ref02;
	public SegmentREF_1 getRef02() { return Ref02; }
	public void setRef02(SegmentREF_1 seg) { Ref02 = seg; }

	private SegmentREF_1 Ref03;
	public SegmentREF_1 getRef03() { return Ref03; }
	public void setRef03(SegmentREF_1 seg) { Ref03 = seg; }

	private List Ref04;
	public SegmentREF_1 getRef04(int idx) { 
		if (Ref04 == null || idx >= Ref04.size()) {
			throw new ArrayIndexOutOfBoundsException("Ref04");
		}
		return (SegmentREF_1) Ref04.get(idx);
	}
	public List getRef04() {
		return Ref04;
	}
	public void setRef04(List segs) { Ref04 = segs; }

	private SegmentREF_1 Ref05;
	public SegmentREF_1 getRef05() { return Ref05; }
	public void setRef05(SegmentREF_1 seg) { Ref05 = seg; }

	private List Ref06;
	public SegmentREF_1 getRef06(int idx) { 
		if (Ref06 == null || idx >= Ref06.size()) {
			throw new ArrayIndexOutOfBoundsException("Ref06");
		}
		return (SegmentREF_1) Ref06.get(idx);
	}
	public List getRef06() {
		return Ref06;
	}
	public void setRef06(List segs) { Ref06 = segs; }

	private SegmentREF_1 Ref07;
	public SegmentREF_1 getRef07() { return Ref07; }
	public void setRef07(SegmentREF_1 seg) { Ref07 = seg; }

	private SegmentREF_1 Ref08;
	public SegmentREF_1 getRef08() { return Ref08; }
	public void setRef08(SegmentREF_1 seg) { Ref08 = seg; }

	private SegmentREF_1 Ref09;
	public SegmentREF_1 getRef09() { return Ref09; }
	public void setRef09(SegmentREF_1 seg) { Ref09 = seg; }

	private SegmentREF_1 Ref10;
	public SegmentREF_1 getRef10() { return Ref10; }
	public void setRef10(SegmentREF_1 seg) { Ref10 = seg; }

	private List Ref11;
	public SegmentREF_1 getRef11(int idx) { 
		if (Ref11 == null || idx >= Ref11.size()) {
			throw new ArrayIndexOutOfBoundsException("Ref11");
		}
		return (SegmentREF_1) Ref11.get(idx);
	}
	public List getRef11() {
		return Ref11;
	}
	public void setRef11(List segs) { Ref11 = segs; }

	private SegmentREF_1 Ref12;
	public SegmentREF_1 getRef12() { return Ref12; }
	public void setRef12(SegmentREF_1 seg) { Ref12 = seg; }

	private SegmentREF_1 Ref13;
	public SegmentREF_1 getRef13() { return Ref13; }
	public void setRef13(SegmentREF_1 seg) { Ref13 = seg; }

	private List K3;
	public SegmentK3_1 getK3(int idx) { 
		if (K3 == null || idx >= K3.size()) {
			throw new ArrayIndexOutOfBoundsException("K3");
		}
		return (SegmentK3_1) K3.get(idx);
	}
	public List getK3() {
		return K3;
	}
	public void setK3(List segs) { K3 = segs; }

	private SegmentNTE_1 Nte;
	public SegmentNTE_1 getNte() { return Nte; }
	public void setNte(SegmentNTE_1 seg) { Nte = seg; }

	private SegmentCR1_1 Cr1;
	public SegmentCR1_1 getCr1() { return Cr1; }
	public void setCr1(SegmentCR1_1 seg) { Cr1 = seg; }

	private SegmentCR2_2 Cr2;
	public SegmentCR2_2 getCr2() { return Cr2; }
	public void setCr2(SegmentCR2_2 seg) { Cr2 = seg; }

	private List Crc01;
	public SegmentCRC_1 getCrc01(int idx) { 
		if (Crc01 == null || idx >= Crc01.size()) {
			throw new ArrayIndexOutOfBoundsException("Crc01");
		}
		return (SegmentCRC_1) Crc01.get(idx);
	}
	public List getCrc01() {
		return Crc01;
	}
	public void setCrc01(List segs) { Crc01 = segs; }

	private List Crc02;
	public SegmentCRC_1 getCrc02(int idx) { 
		if (Crc02 == null || idx >= Crc02.size()) {
			throw new ArrayIndexOutOfBoundsException("Crc02");
		}
		return (SegmentCRC_1) Crc02.get(idx);
	}
	public List getCrc02() {
		return Crc02;
	}
	public void setCrc02(List segs) { Crc02 = segs; }

	private SegmentCRC_2 Crc03;
	public SegmentCRC_2 getCrc03() { return Crc03; }
	public void setCrc03(SegmentCRC_2 seg) { Crc03 = seg; }

	private SegmentCRC_3 Crc04;
	public SegmentCRC_3 getCrc04() { return Crc04; }
	public void setCrc04(SegmentCRC_3 seg) { Crc04 = seg; }

	private SegmentHI_2 Hi;
	public SegmentHI_2 getHi() { return Hi; }
	public void setHi(SegmentHI_2 seg) { Hi = seg; }

	private SegmentHCP_1 Hcp;
	public SegmentHCP_1 getHcp() { return Hcp; }
	public void setHcp(SegmentHCP_1 seg) { Hcp = seg; }


	// Loops
	private List loop2305;
	public Loop2305 getLoop2305(int idx) { 
		if (loop2305 == null || idx >= loop2305.size()) {
			throw new ArrayIndexOutOfBoundsException("loop2305");
		}
		return (Loop2305) loop2305.get(idx);
	}
	public List getLoop2305() {
		return loop2305;
	}
	public void setLoop2305(List loop) { loop2305 = loop; }

	private List loop2310A;
	public Loop2310A getLoop2310A(int idx) { 
		if (loop2310A == null || idx >= loop2310A.size()) {
			throw new ArrayIndexOutOfBoundsException("loop2310A");
		}
		return (Loop2310A) loop2310A.get(idx);
	}
	public List getLoop2310A() {
		return loop2310A;
	}
	public void setLoop2310A(List loop) { loop2310A = loop; }

	private Loop2310B loop2310B;
	public Loop2310B getLoop2310B() { return loop2310B; }
	public void setLoop2310B(Loop2310B loop) { loop2310B = loop; }

	private Loop2310C loop2310C;
	public Loop2310C getLoop2310C() { return loop2310C; }
	public void setLoop2310C(Loop2310C loop) { loop2310C = loop; }

	private Loop2310D loop2310D;
	public Loop2310D getLoop2310D() { return loop2310D; }
	public void setLoop2310D(Loop2310D loop) { loop2310D = loop; }

	private Loop2310E loop2310E;
	public Loop2310E getLoop2310E() { return loop2310E; }
	public void setLoop2310E(Loop2310E loop) { loop2310E = loop; }

	private List loop2320;
	public Loop2320 getLoop2320(int idx) { 
		if (loop2320 == null || idx >= loop2320.size()) {
			throw new ArrayIndexOutOfBoundsException("loop2320");
		}
		return (Loop2320) loop2320.get(idx);
	}
	public List getLoop2320() {
		return loop2320;
	}
	public void setLoop2320(List loop) { loop2320 = loop; }

	private List loop2400;
	public Loop2400 getLoop2400(int idx) { 
		if (loop2400 == null || idx >= loop2400.size()) {
			throw new ArrayIndexOutOfBoundsException("loop2400");
		}
		return (Loop2400) loop2400.get(idx);
	}
	public List getLoop2400() {
		return loop2400;
	}
	public void setLoop2400(List loop) { loop2400 = loop; }


	public void parse(EDIInputStream eis) throws IOException {
		if (log.isDebugEnabled()) log.debug("Starting loop 2300");
		startLineNumber = eis.getCurrentSegmentNumber() + 1;

		if (!eis.peekSegment("CLM")) {
			eis.addError("A single instance of Segment CLM is required.");
		} else {
			Clm = new SegmentCLM_1();
			Clm.setOrdinal(240);
			Clm.parse(eis);
		}

		if (eis.peekSegment("DTP", 1, "454")) {
			Dtp01 = new SegmentDTP_1();
			Dtp01.setOrdinal(242);
			Dtp01.parse(eis);
		}

		if (eis.peekSegment("DTP", 1, "304")) {
			Dtp02 = new SegmentDTP_1();
			Dtp02.setOrdinal(244);
			Dtp02.parse(eis);
		}

		if (eis.peekSegment("DTP", 1, "431")) {
			Dtp03 = new SegmentDTP_1();
			Dtp03.setOrdinal(245);
			Dtp03.parse(eis);
		}

		while (eis.peekSegment("DTP", 1, "453")) {
			if (Dtp04 == null) Dtp04 = new ArrayList();
			SegmentDTP_1 tmp = new SegmentDTP_1();
			tmp.setOrdinal(246);
			tmp.parse(eis);
			Dtp04.add(tmp);
			if (Dtp04.size() > 5) {
				eis.addError("Segment DTP has too many instances.  It can only repeat 5 times");
				eis.eatSegments("DTP");
				break;
			}
		}

		while (eis.peekSegment("DTP", 1, "438")) {
			if (Dtp05 == null) Dtp05 = new ArrayList();
			SegmentDTP_1 tmp = new SegmentDTP_1();
			tmp.setOrdinal(247);
			tmp.parse(eis);
			Dtp05.add(tmp);
			if (Dtp05.size() > 10) {
				eis.addError("Segment DTP has too many instances.  It can only repeat 10 times");
				eis.eatSegments("DTP");
				break;
			}
		}

		while (eis.peekSegment("DTP", 1, "439")) {
			if (Dtp06 == null) Dtp06 = new ArrayList();
			SegmentDTP_1 tmp = new SegmentDTP_1();
			tmp.setOrdinal(248);
			tmp.parse(eis);
			Dtp06.add(tmp);
			if (Dtp06.size() > 10) {
				eis.addError("Segment DTP has too many instances.  It can only repeat 10 times");
				eis.eatSegments("DTP");
				break;
			}
		}

		if (eis.peekSegment("DTP", 1, "484")) {
			Dtp07 = new SegmentDTP_1();
			Dtp07.setOrdinal(249);
			Dtp07.parse(eis);
		}

		if (eis.peekSegment("DTP", 1, "455")) {
			Dtp08 = new SegmentDTP_1();
			Dtp08.setOrdinal(250);
			Dtp08.parse(eis);
		}

		if (eis.peekSegment("DTP", 1, "471")) {
			Dtp09 = new SegmentDTP_1();
			Dtp09.setOrdinal(252);
			Dtp09.parse(eis);
		}

		while (eis.peekSegment("DTP", 1, "360")) {
			if (Dtp10 == null) Dtp10 = new ArrayList();
			SegmentDTP_1 tmp = new SegmentDTP_1();
			tmp.setOrdinal(253);
			tmp.parse(eis);
			Dtp10.add(tmp);
			if (Dtp10.size() > 5) {
				eis.addError("Segment DTP has too many instances.  It can only repeat 5 times");
				eis.eatSegments("DTP");
				break;
			}
		}

		while (eis.peekSegment("DTP", 1, "361")) {
			if (Dtp11 == null) Dtp11 = new ArrayList();
			SegmentDTP_1 tmp = new SegmentDTP_1();
			tmp.setOrdinal(254);
			tmp.parse(eis);
			Dtp11.add(tmp);
			if (Dtp11.size() > 5) {
				eis.addError("Segment DTP has too many instances.  It can only repeat 5 times");
				eis.eatSegments("DTP");
				break;
			}
		}

		if (eis.peekSegment("DTP", 1, "297")) {
			Dtp12 = new SegmentDTP_1();
			Dtp12.setOrdinal(255);
			Dtp12.parse(eis);
		}

		if (eis.peekSegment("DTP", 1, "296")) {
			Dtp13 = new SegmentDTP_1();
			Dtp13.setOrdinal(256);
			Dtp13.parse(eis);
		}

		if (eis.peekSegment("DTP", 1, "435")) {
			Dtp14 = new SegmentDTP_1();
			Dtp14.setOrdinal(257);
			Dtp14.parse(eis);
		}

		if (eis.peekSegment("DTP", 1, "096")) {
			Dtp15 = new SegmentDTP_1();
			Dtp15.setOrdinal(258);
			Dtp15.parse(eis);
		}

		while (eis.peekSegment("DTP", 1, new String[] { "090", "091" })) {
			if (Dtp16 == null) Dtp16 = new ArrayList();
			SegmentDTP_1 tmp = new SegmentDTP_1();
			tmp.setOrdinal(259);
			tmp.parse(eis);
			Dtp16.add(tmp);
			if (Dtp16.size() > 2) {
				eis.addError("Segment DTP has too many instances.  It can only repeat 2 times");
				eis.eatSegments("DTP");
				break;
			}
		}
		if (eis.peekSegment("DTP")) {
			eis.addError("Segment DTP could not be parsed.");
			eis.eatSegments("DTP");
		}

		while (eis.peekSegment("PWK")) {
			if (Pwk == null) Pwk = new ArrayList();
			SegmentPWK_1 tmp = new SegmentPWK_1();
			tmp.setOrdinal(260);
			tmp.parse(eis);
			Pwk.add(tmp);
			if (Pwk.size() > 10) {
				eis.addError("Segment PWK has too many instances.  It can only repeat 10 times");
				eis.eatSegments("PWK");
				break;
			}
		}

		if (eis.peekSegment("CN1")) {
			Cn1 = new SegmentCN1_1();
			Cn1.setOrdinal(261);
			Cn1.parse(eis);
		}

		if (eis.peekSegment("AMT", 1, "MA")) {
			Amt01 = new SegmentAMT_1();
			Amt01.setOrdinal(262);
			Amt01.parse(eis);
		}

		if (eis.peekSegment("AMT", 1, "F5")) {
			Amt02 = new SegmentAMT_1();
			Amt02.setOrdinal(263);
			Amt02.parse(eis);
		}

		if (eis.peekSegment("AMT", 1, "NE")) {
			Amt03 = new SegmentAMT_1();
			Amt03.setOrdinal(264);
			Amt03.parse(eis);
		}
		if (eis.peekSegment("AMT")) {
			eis.addError("Segment AMT could not be parsed.");
			eis.eatSegments("AMT");
		}

		if (eis.peekSegment("REF", 1, "4N")) {
			Ref01 = new SegmentREF_1();
			Ref01.setOrdinal(265);
			Ref01.parse(eis);
		}

		if (eis.peekSegment("REF", 1, "F5")) {
			Ref02 = new SegmentREF_1();
			Ref02.setOrdinal(266);
			Ref02.parse(eis);
		}

		if (eis.peekSegment("REF", 1, "EW")) {
			Ref03 = new SegmentREF_1();
			Ref03.setOrdinal(267);
			Ref03.parse(eis);
		}

		while (eis.peekSegment("REF", 1, new String[] { "9F", "G1" })) {
			if (Ref04 == null) Ref04 = new ArrayList();
			SegmentREF_1 tmp = new SegmentREF_1();
			tmp.setOrdinal(268);
			tmp.parse(eis);
			Ref04.add(tmp);
			if (Ref04.size() > 2) {
				eis.addError("Segment REF has too many instances.  It can only repeat 2 times");
				eis.eatSegments("REF");
				break;
			}
		}

		if (eis.peekSegment("REF", 1, "F8")) {
			Ref05 = new SegmentREF_1();
			Ref05.setOrdinal(269);
			Ref05.parse(eis);
		}

		while (eis.peekSegment("REF", 1, "X4")) {
			if (Ref06 == null) Ref06 = new ArrayList();
			SegmentREF_1 tmp = new SegmentREF_1();
			tmp.setOrdinal(270);
			tmp.parse(eis);
			Ref06.add(tmp);
			if (Ref06.size() > 3) {
				eis.addError("Segment REF has too many instances.  It can only repeat 3 times");
				eis.eatSegments("REF");
				break;
			}
		}

		if (eis.peekSegment("REF", 1, "9A")) {
			Ref07 = new SegmentREF_1();
			Ref07.setOrdinal(271);
			Ref07.parse(eis);
		}

		if (eis.peekSegment("REF", 1, "9C")) {
			Ref08 = new SegmentREF_1();
			Ref08.setOrdinal(272);
			Ref08.parse(eis);
		}

		if (eis.peekSegment("REF", 1, "LX")) {
			Ref09 = new SegmentREF_1();
			Ref09.setOrdinal(273);
			Ref09.parse(eis);
		}

		if (eis.peekSegment("REF", 1, "D9")) {
			Ref10 = new SegmentREF_1();
			Ref10.setOrdinal(274);
			Ref10.parse(eis);
		}

		while (eis.peekSegment("REF", 1, "1S")) {
			if (Ref11 == null) Ref11 = new ArrayList();
			SegmentREF_1 tmp = new SegmentREF_1();
			tmp.setOrdinal(275);
			tmp.parse(eis);
			Ref11.add(tmp);
			if (Ref11.size() > 4) {
				eis.addError("Segment REF has too many instances.  It can only repeat 4 times");
				eis.eatSegments("REF");
				break;
			}
		}

		if (eis.peekSegment("REF", 1, "EA")) {
			Ref12 = new SegmentREF_1();
			Ref12.setOrdinal(276);
			Ref12.parse(eis);
		}

		if (eis.peekSegment("REF", 1, "P4")) {
			Ref13 = new SegmentREF_1();
			Ref13.setOrdinal(277);
			Ref13.parse(eis);
		}
		if (eis.peekSegment("REF")) {
			eis.addError("Segment REF could not be parsed.");
			eis.eatSegments("REF");
		}

		while (eis.peekSegment("K3")) {
			if (K3 == null) K3 = new ArrayList();
			SegmentK3_1 tmp = new SegmentK3_1();
			tmp.setOrdinal(278);
			tmp.parse(eis);
			K3.add(tmp);
			if (K3.size() > 10) {
				eis.addError("Segment K3 has too many instances.  It can only repeat 10 times");
				eis.eatSegments("K3");
				break;
			}
		}

		if (eis.peekSegment("NTE")) {
			Nte = new SegmentNTE_1();
			Nte.setOrdinal(279);
			Nte.parse(eis);
		}

		if (eis.peekSegment("CR1")) {
			Cr1 = new SegmentCR1_1();
			Cr1.setOrdinal(280);
			Cr1.parse(eis);
		}

		if (eis.peekSegment("CR2")) {
			Cr2 = new SegmentCR2_2();
			Cr2.setOrdinal(281);
			Cr2.parse(eis);
		}

		while (eis.peekSegment("CRC", 1, "07")) {
			if (Crc01 == null) Crc01 = new ArrayList();
			SegmentCRC_1 tmp = new SegmentCRC_1();
			tmp.setOrdinal(282);
			tmp.parse(eis);
			Crc01.add(tmp);
			if (Crc01.size() > 3) {
				eis.addError("Segment CRC has too many instances.  It can only repeat 3 times");
				eis.eatSegments("CRC");
				break;
			}
		}

		while (eis.peekSegment("CRC", 1, new String[] { "E1", "E2", "E3" })) {
			if (Crc02 == null) Crc02 = new ArrayList();
			SegmentCRC_1 tmp = new SegmentCRC_1();
			tmp.setOrdinal(283);
			tmp.parse(eis);
			Crc02.add(tmp);
			if (Crc02.size() > 3) {
				eis.addError("Segment CRC has too many instances.  It can only repeat 3 times");
				eis.eatSegments("CRC");
				break;
			}
		}

		if (eis.peekSegment("CRC", 1, "75")) {
			Crc03 = new SegmentCRC_2();
			Crc03.setOrdinal(284);
			Crc03.parse(eis);
		}

		if (eis.peekSegment("CRC", 1, "ZZ")) {
			Crc04 = new SegmentCRC_3();
			Crc04.setOrdinal(434);
			Crc04.parse(eis);
		}
		if (eis.peekSegment("CRC")) {
			eis.addError("Segment CRC could not be parsed.");
			eis.eatSegments("CRC");
		}

		if (eis.peekSegment("HI")) {
			Hi = new SegmentHI_2();
			Hi.setOrdinal(285);
			Hi.parse(eis);
		}

		if (eis.peekSegment("HCP")) {
			Hcp = new SegmentHCP_1();
			Hcp.setOrdinal(286);
			Hcp.parse(eis);
		}

		while (true) {
			if (eis.peekSegment("CR7")) {
				if (loop2305 == null) loop2305 = new ArrayList();
				Loop2305 tmp = new Loop2305();
				tmp.parse(eis);
				loop2305.add(tmp);
			}
			else if (eis.peekSegment("NM1", 1, Loop2310A.TRIGGER_VALUES)) {
				if (loop2310A == null) loop2310A = new ArrayList();
				Loop2310A tmp = new Loop2310A();
				tmp.parse(eis);
				loop2310A.add(tmp);
			}
			else if (eis.peekSegment("NM1", 1, Loop2310B.TRIGGER_VALUES)) {
				if (loop2310B != null) {
					eis.addError("Only one instance of Loop 2310B is allowed.");
				} else {
					loop2310B = new Loop2310B();
					loop2310B.parse(eis);
				}
			}
			else if (eis.peekSegment("NM1", 1, Loop2310C.TRIGGER_VALUES)) {
				if (loop2310C != null) {
					eis.addError("Only one instance of Loop 2310C is allowed.");
				} else {
					loop2310C = new Loop2310C();
					loop2310C.parse(eis);
				}
			}
			else if (eis.peekSegment("NM1", 1, Loop2310D.TRIGGER_VALUES)) {
				if (loop2310D != null) {
					eis.addError("Only one instance of Loop 2310D is allowed.");
				} else {
					loop2310D = new Loop2310D();
					loop2310D.parse(eis);
				}
			}
			else if (eis.peekSegment("NM1", 1, Loop2310E.TRIGGER_VALUES)) {
				if (loop2310E != null) {
					eis.addError("Only one instance of Loop 2310E is allowed.");
				} else {
					loop2310E = new Loop2310E();
					loop2310E.parse(eis);
				}
			}
			else if (eis.peekSegment("SBR")) {
				if (loop2320 == null) loop2320 = new ArrayList();
				Loop2320 tmp = new Loop2320();
				tmp.parse(eis);
				loop2320.add(tmp);
			}
			else if (eis.peekSegment("LX")) {
				if (loop2400 == null) loop2400 = new ArrayList();
				Loop2400 tmp = new Loop2400();
				tmp.parse(eis);
				loop2400.add(tmp);
			}
			else {
				break;
			}
		}

		if (loop2305 != null && loop2305.size() > 6) {
			eis.addError("Loop 2305 has too many instances.  It can repeat only 6 times");
		}
		if (loop2310A != null && loop2310A.size() > 2) {
			eis.addError("Loop 2310A has too many instances.  It can repeat only 2 times");
		}
		if (loop2320 != null && loop2320.size() > 10) {
			eis.addError("Loop 2320 has too many instances.  It can repeat only 10 times");
		}
		if (loop2400 == null) {
			eis.addError("Loop 2400 must be used.");
		}
		if (loop2400 != null && loop2400.size() > 50) {
			eis.addError("Loop 2400 has too many instances.  It can repeat only 50 times");
		}
		endLineNumber = eis.getCurrentSegmentNumber();
		validate(eis);
	}

	public void emit(EDIOutputStream eos) throws IOException {
		if (Clm != null) {
			Clm.emit(eos);
		} else {
			eos.addError("Missing mandatory segment 'CLM'");
		}

		if (Dtp01 != null) {
			Dtp01.emit(eos);
		}

		if (Dtp02 != null) {
			Dtp02.emit(eos);
		}

		if (Dtp03 != null) {
			Dtp03.emit(eos);
		}

		if (Dtp04 != null) {
			int idx = 0, size = Dtp04.size();
			while (idx < size) {
				getDtp04(idx++).emit(eos);
			}
		}

		if (Dtp05 != null) {
			int idx = 0, size = Dtp05.size();
			while (idx < size) {
				getDtp05(idx++).emit(eos);
			}
		}

		if (Dtp06 != null) {
			int idx = 0, size = Dtp06.size();
			while (idx < size) {
				getDtp06(idx++).emit(eos);
			}
		}

		if (Dtp07 != null) {
			Dtp07.emit(eos);
		}

		if (Dtp08 != null) {
			Dtp08.emit(eos);
		}

		if (Dtp09 != null) {
			Dtp09.emit(eos);
		}

		if (Dtp10 != null) {
			int idx = 0, size = Dtp10.size();
			while (idx < size) {
				getDtp10(idx++).emit(eos);
			}
		}

		if (Dtp11 != null) {
			int idx = 0, size = Dtp11.size();
			while (idx < size) {
				getDtp11(idx++).emit(eos);
			}
		}

		if (Dtp12 != null) {
			Dtp12.emit(eos);
		}

		if (Dtp13 != null) {
			Dtp13.emit(eos);
		}

		if (Dtp14 != null) {
			Dtp14.emit(eos);
		}

		if (Dtp15 != null) {
			Dtp15.emit(eos);
		}

		if (Dtp16 != null) {
			int idx = 0, size = Dtp16.size();
			while (idx < size) {
				getDtp16(idx++).emit(eos);
			}
		}

		if (Pwk != null) {
			int idx = 0, size = Pwk.size();
			while (idx < size) {
				getPwk(idx++).emit(eos);
			}
		}

		if (Cn1 != null) {
			Cn1.emit(eos);
		}

		if (Amt01 != null) {
			Amt01.emit(eos);
		}

		if (Amt02 != null) {
			Amt02.emit(eos);
		}

		if (Amt03 != null) {
			Amt03.emit(eos);
		}

		if (Ref01 != null) {
			Ref01.emit(eos);
		}

		if (Ref02 != null) {
			Ref02.emit(eos);
		}

		if (Ref03 != null) {
			Ref03.emit(eos);
		}

		if (Ref04 != null) {
			int idx = 0, size = Ref04.size();
			while (idx < size) {
				getRef04(idx++).emit(eos);
			}
		}

		if (Ref05 != null) {
			Ref05.emit(eos);
		}

		if (Ref06 != null) {
			int idx = 0, size = Ref06.size();
			while (idx < size) {
				getRef06(idx++).emit(eos);
			}
		}

		if (Ref07 != null) {
			Ref07.emit(eos);
		}

		if (Ref08 != null) {
			Ref08.emit(eos);
		}

		if (Ref09 != null) {
			Ref09.emit(eos);
		}

		if (Ref10 != null) {
			Ref10.emit(eos);
		}

		if (Ref11 != null) {
			int idx = 0, size = Ref11.size();
			while (idx < size) {
				getRef11(idx++).emit(eos);
			}
		}

		if (Ref12 != null) {
			Ref12.emit(eos);
		}

		if (Ref13 != null) {
			Ref13.emit(eos);
		}

		if (K3 != null) {
			int idx = 0, size = K3.size();
			while (idx < size) {
				getK3(idx++).emit(eos);
			}
		}

		if (Nte != null) {
			Nte.emit(eos);
		}

		if (Cr1 != null) {
			Cr1.emit(eos);
		}

		if (Cr2 != null) {
			Cr2.emit(eos);
		}

		if (Crc01 != null) {
			int idx = 0, size = Crc01.size();
			while (idx < size) {
				getCrc01(idx++).emit(eos);
			}
		}

		if (Crc02 != null) {
			int idx = 0, size = Crc02.size();
			while (idx < size) {
				getCrc02(idx++).emit(eos);
			}
		}

		if (Crc03 != null) {
			Crc03.emit(eos);
		}

		if (Crc04 != null) {
			Crc04.emit(eos);
		}

		if (Hi != null) {
			Hi.emit(eos);
		}

		if (Hcp != null) {
			Hcp.emit(eos);
		}

		if (loop2305 != null) {
			int idx = 0, size = loop2305.size();
			while (idx < size) {
				getLoop2305(idx++).emit(eos);
			}
		}

		if (loop2310A != null) {
			int idx = 0, size = loop2310A.size();
			while (idx < size) {
				getLoop2310A(idx++).emit(eos);
			}
		}

		if (loop2310B != null) {
			loop2310B.emit(eos);
		}

		if (loop2310C != null) {
			loop2310C.emit(eos);
		}

		if (loop2310D != null) {
			loop2310D.emit(eos);
		}

		if (loop2310E != null) {
			loop2310E.emit(eos);
		}

		if (loop2320 != null) {
			int idx = 0, size = loop2320.size();
			while (idx < size) {
				getLoop2320(idx++).emit(eos);
			}
		}

		if (loop2400 != null) {
			int idx = 0, size = loop2400.size();
			while (idx < size) {
				getLoop2400(idx++).emit(eos);
			}
		} else {
			eos.addError("Missing mandatory segment 'LOOP2400'");
		}

	}

	public EDIElement createCopy() {
		Loop2300 thisCopy = new Loop2300();
		thisCopy.setStartLineNumber(this.startLineNumber);
		thisCopy.setEndLineNumber(this.endLineNumber);

		if (Clm != null) {
			thisCopy.setClm((SegmentCLM_1)Clm.createCopy());
		}

		if (Dtp01 != null) {
			thisCopy.setDtp01((SegmentDTP_1)Dtp01.createCopy());
		}

		if (Dtp02 != null) {
			thisCopy.setDtp02((SegmentDTP_1)Dtp02.createCopy());
		}

		if (Dtp03 != null) {
			thisCopy.setDtp03((SegmentDTP_1)Dtp03.createCopy());
		}

		if (Dtp04 != null) {
			thisCopy.setDtp04(new ArrayList());
			int idx = 0, size = Dtp04.size();
			while (idx < size) {
				thisCopy.getDtp04().add(getDtp04(idx++).createCopy());
			}
		}

		if (Dtp05 != null) {
			thisCopy.setDtp05(new ArrayList());
			int idx = 0, size = Dtp05.size();
			while (idx < size) {
				thisCopy.getDtp05().add(getDtp05(idx++).createCopy());
			}
		}

		if (Dtp06 != null) {
			thisCopy.setDtp06(new ArrayList());
			int idx = 0, size = Dtp06.size();
			while (idx < size) {
				thisCopy.getDtp06().add(getDtp06(idx++).createCopy());
			}
		}

		if (Dtp07 != null) {
			thisCopy.setDtp07((SegmentDTP_1)Dtp07.createCopy());
		}

		if (Dtp08 != null) {
			thisCopy.setDtp08((SegmentDTP_1)Dtp08.createCopy());
		}

		if (Dtp09 != null) {
			thisCopy.setDtp09((SegmentDTP_1)Dtp09.createCopy());
		}

		if (Dtp10 != null) {
			thisCopy.setDtp10(new ArrayList());
			int idx = 0, size = Dtp10.size();
			while (idx < size) {
				thisCopy.getDtp10().add(getDtp10(idx++).createCopy());
			}
		}

		if (Dtp11 != null) {
			thisCopy.setDtp11(new ArrayList());
			int idx = 0, size = Dtp11.size();
			while (idx < size) {
				thisCopy.getDtp11().add(getDtp11(idx++).createCopy());
			}
		}

		if (Dtp12 != null) {
			thisCopy.setDtp12((SegmentDTP_1)Dtp12.createCopy());
		}

		if (Dtp13 != null) {
			thisCopy.setDtp13((SegmentDTP_1)Dtp13.createCopy());
		}

		if (Dtp14 != null) {
			thisCopy.setDtp14((SegmentDTP_1)Dtp14.createCopy());
		}

		if (Dtp15 != null) {
			thisCopy.setDtp15((SegmentDTP_1)Dtp15.createCopy());
		}

		if (Dtp16 != null) {
			thisCopy.setDtp16(new ArrayList());
			int idx = 0, size = Dtp16.size();
			while (idx < size) {
				thisCopy.getDtp16().add(getDtp16(idx++).createCopy());
			}
		}

		if (Pwk != null) {
			thisCopy.setPwk(new ArrayList());
			int idx = 0, size = Pwk.size();
			while (idx < size) {
				thisCopy.getPwk().add(getPwk(idx++).createCopy());
			}
		}

		if (Cn1 != null) {
			thisCopy.setCn1((SegmentCN1_1)Cn1.createCopy());
		}

		if (Amt01 != null) {
			thisCopy.setAmt01((SegmentAMT_1)Amt01.createCopy());
		}

		if (Amt02 != null) {
			thisCopy.setAmt02((SegmentAMT_1)Amt02.createCopy());
		}

		if (Amt03 != null) {
			thisCopy.setAmt03((SegmentAMT_1)Amt03.createCopy());
		}

		if (Ref01 != null) {
			thisCopy.setRef01((SegmentREF_1)Ref01.createCopy());
		}

		if (Ref02 != null) {
			thisCopy.setRef02((SegmentREF_1)Ref02.createCopy());
		}

		if (Ref03 != null) {
			thisCopy.setRef03((SegmentREF_1)Ref03.createCopy());
		}

		if (Ref04 != null) {
			thisCopy.setRef04(new ArrayList());
			int idx = 0, size = Ref04.size();
			while (idx < size) {
				thisCopy.getRef04().add(getRef04(idx++).createCopy());
			}
		}

		if (Ref05 != null) {
			thisCopy.setRef05((SegmentREF_1)Ref05.createCopy());
		}

		if (Ref06 != null) {
			thisCopy.setRef06(new ArrayList());
			int idx = 0, size = Ref06.size();
			while (idx < size) {
				thisCopy.getRef06().add(getRef06(idx++).createCopy());
			}
		}

		if (Ref07 != null) {
			thisCopy.setRef07((SegmentREF_1)Ref07.createCopy());
		}

		if (Ref08 != null) {
			thisCopy.setRef08((SegmentREF_1)Ref08.createCopy());
		}

		if (Ref09 != null) {
			thisCopy.setRef09((SegmentREF_1)Ref09.createCopy());
		}

		if (Ref10 != null) {
			thisCopy.setRef10((SegmentREF_1)Ref10.createCopy());
		}

		if (Ref11 != null) {
			thisCopy.setRef11(new ArrayList());
			int idx = 0, size = Ref11.size();
			while (idx < size) {
				thisCopy.getRef11().add(getRef11(idx++).createCopy());
			}
		}

		if (Ref12 != null) {
			thisCopy.setRef12((SegmentREF_1)Ref12.createCopy());
		}

		if (Ref13 != null) {
			thisCopy.setRef13((SegmentREF_1)Ref13.createCopy());
		}

		if (K3 != null) {
			thisCopy.setK3(new ArrayList());
			int idx = 0, size = K3.size();
			while (idx < size) {
				thisCopy.getK3().add(getK3(idx++).createCopy());
			}
		}

		if (Nte != null) {
			thisCopy.setNte((SegmentNTE_1)Nte.createCopy());
		}

		if (Cr1 != null) {
			thisCopy.setCr1((SegmentCR1_1)Cr1.createCopy());
		}

		if (Cr2 != null) {
			thisCopy.setCr2((SegmentCR2_2)Cr2.createCopy());
		}

		if (Crc01 != null) {
			thisCopy.setCrc01(new ArrayList());
			int idx = 0, size = Crc01.size();
			while (idx < size) {
				thisCopy.getCrc01().add(getCrc01(idx++).createCopy());
			}
		}

		if (Crc02 != null) {
			thisCopy.setCrc02(new ArrayList());
			int idx = 0, size = Crc02.size();
			while (idx < size) {
				thisCopy.getCrc02().add(getCrc02(idx++).createCopy());
			}
		}

		if (Crc03 != null) {
			thisCopy.setCrc03((SegmentCRC_2)Crc03.createCopy());
		}

		if (Crc04 != null) {
			thisCopy.setCrc04((SegmentCRC_3)Crc04.createCopy());
		}

		if (Hi != null) {
			thisCopy.setHi((SegmentHI_2)Hi.createCopy());
		}

		if (Hcp != null) {
			thisCopy.setHcp((SegmentHCP_1)Hcp.createCopy());
		}

		if (loop2305 != null) {
			thisCopy.setLoop2305(new ArrayList());
			int idx = 0, size = loop2305.size();
			while (idx < size) {
				thisCopy.getLoop2305().add(getLoop2305(idx++).createCopy());
			}
		}

		if (loop2310A != null) {
			thisCopy.setLoop2310A(new ArrayList());
			int idx = 0, size = loop2310A.size();
			while (idx < size) {
				thisCopy.getLoop2310A().add(getLoop2310A(idx++).createCopy());
			}
		}

		if (loop2310B != null) {
			thisCopy.setLoop2310B((Loop2310B)loop2310B.createCopy());
		}

		if (loop2310C != null) {
			thisCopy.setLoop2310C((Loop2310C)loop2310C.createCopy());
		}

		if (loop2310D != null) {
			thisCopy.setLoop2310D((Loop2310D)loop2310D.createCopy());
		}

		if (loop2310E != null) {
			thisCopy.setLoop2310E((Loop2310E)loop2310E.createCopy());
		}

		if (loop2320 != null) {
			thisCopy.setLoop2320(new ArrayList());
			int idx = 0, size = loop2320.size();
			while (idx < size) {
				thisCopy.getLoop2320().add(getLoop2320(idx++).createCopy());
			}
		}

		if (loop2400 != null) {
			thisCopy.setLoop2400(new ArrayList());
			int idx = 0, size = loop2400.size();
			while (idx < size) {
				thisCopy.getLoop2400().add(getLoop2400(idx++).createCopy());
			}
		}

		return thisCopy;
	}

}
