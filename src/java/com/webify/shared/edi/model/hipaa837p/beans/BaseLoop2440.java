package com.webify.shared.edi.model.hipaa837p.beans;

import com.webify.shared.edi.model.*;
import com.webify.shared.edi.model.hipaa837p.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import java.io.IOException;
import java.util.*;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class BaseLoop2440 extends EDILoop {

	private static final Log log = LogFactory.getLog(Loop2440.class);

	private int startLineNumber, endLineNumber;
	public int getStartLineNumber() { return startLineNumber; }
	public int getEndLineNumber() { return endLineNumber; }

	/** Do NOT use this method - it is not public by choice... */
	public void setEndLineNumber(int foo) { endLineNumber = foo; }
	/** Do NOT use this method - it is not public by choice... */
	public void setStartLineNumber(int foo) { startLineNumber = foo; }

	// Segments
	private SegmentLQ_1 Lq;
	public SegmentLQ_1 getLq() { return Lq; }
	public void setLq(SegmentLQ_1 seg) { Lq = seg; }

	private List Frm;
	public SegmentFRM_1 getFrm(int idx) { 
		if (Frm == null || idx >= Frm.size()) {
			throw new ArrayIndexOutOfBoundsException("Frm");
		}
		return (SegmentFRM_1) Frm.get(idx);
	}
	public List getFrm() {
		return Frm;
	}
	public void setFrm(List segs) { Frm = segs; }


	// Loops

	public void parse(EDIInputStream eis) throws IOException {
		if (log.isDebugEnabled()) log.debug("Starting loop 2440");
		startLineNumber = eis.getCurrentSegmentNumber() + 1;

		if (eis.peekSegment("LQ")) {
			Lq = new SegmentLQ_1();
			Lq.setOrdinal(423);
			Lq.parse(eis);
		}

		while (eis.peekSegment("FRM")) {
			if (Frm == null) Frm = new ArrayList();
			SegmentFRM_1 tmp = new SegmentFRM_1();
			tmp.setOrdinal(424);
			tmp.parse(eis);
			Frm.add(tmp);
			if (Frm.size() > 99) {
				eis.addError("Segment FRM has too many instances.  It can only repeat 99 times");
				eis.eatSegments("FRM");
				break;
			}
		}
		if (Frm.size() == 0) {
			eis.addError("Segment 'FRM' is marked MUST_USE.  It is required but no instances were found.");
		}

		endLineNumber = eis.getCurrentSegmentNumber();
		validate(eis);
	}

	public void emit(EDIOutputStream eos) throws IOException {
		if (Lq != null) {
			Lq.emit(eos);
		}

		if (Frm != null) {
			int idx = 0, size = Frm.size();
			while (idx < size) {
				getFrm(idx++).emit(eos);
			}
		} else {
			eos.addError("Missing mandatory segment 'FRM'");
		}

	}

	public EDIElement createCopy() {
		Loop2440 thisCopy = new Loop2440();
		thisCopy.setStartLineNumber(this.startLineNumber);
		thisCopy.setEndLineNumber(this.endLineNumber);

		if (Lq != null) {
			thisCopy.setLq((SegmentLQ_1)Lq.createCopy());
		}

		if (Frm != null) {
			thisCopy.setFrm(new ArrayList());
			int idx = 0, size = Frm.size();
			while (idx < size) {
				thisCopy.getFrm().add(getFrm(idx++).createCopy());
			}
		}

		return thisCopy;
	}

}
