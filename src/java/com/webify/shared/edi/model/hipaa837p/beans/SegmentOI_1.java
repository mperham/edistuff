package com.webify.shared.edi.model.hipaa837p.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentOI_1 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentOI_1.class);

	public static final String SEGMENT_NAME = "OI";
	public static final int FIELD_COUNT = 6;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private String Oi03;
	public String getOi03() { return Oi03; }
	public void setOi03(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'OI03' may not be null");
		}
		if (Field1073.validateValue(val)) {
			Oi03 = val;
		} else {
			throw new IllegalArgumentException("Field 'OI03' cannot have value: " + val);
		}
	}

	private String Oi04;
	public String getOi04() { return Oi04; }
	public void setOi04(String val) {
		if (Field1351.validateValue(val)) {
			Oi04 = val;
		} else {
			throw new IllegalArgumentException("Field 'OI04' cannot have value: " + val);
		}
	}

	private String Oi06;
	public String getOi06() { return Oi06; }
	public void setOi06(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'OI06' may not be null");
		}
		if (Field1363.validateValue(val)) {
			Oi06 = val;
		} else {
			throw new IllegalArgumentException("Field 'OI06' cannot have value: " + val);
		}
	}


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment OI on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		Oi03 = eis.getStringValue(fields, 3, 1, 1, true);
		Field1073.validateInputValue(eis, "OI03", Oi03, ordinal, 3);
		if (Oi03 == null || "".equals(fields[3].trim())) {
			eis.addError("Field 'OI03' missing");
		}
		Oi04 = eis.getStringValue(fields, 4, 1, 1, false);
		Field1351.validateInputValue(eis, "OI04", Oi04, ordinal, 4);
		Oi06 = eis.getStringValue(fields, 6, 1, 1, true);
		Field1363.validateInputValue(eis, "OI06", Oi06, ordinal, 6);
		if (Oi06 == null || "".equals(fields[6].trim())) {
			eis.addError("Field 'OI06' missing");
		}
	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("OI");
		eos.writeNullField();
		eos.writeNullField();
		if (Oi03 == null) {
			eos.addError("Emitting null mandatory field 'OI03'");
		}

		eos.writeField(Oi03);
		eos.writeField(Oi04);
		eos.writeNullField();
		if (Oi06 == null) {
			eos.addError("Emitting null mandatory field 'OI06'");
		}

		eos.writeField(Oi06);
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentOI_1 copy = new SegmentOI_1();
		copy.setLineNumber(this.lineNumber);
		copy.Oi03 = this.Oi03;
		copy.Oi04 = this.Oi04;
		copy.Oi06 = this.Oi06;
		return copy;
	}
}
