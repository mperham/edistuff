package com.webify.shared.edi.model.hipaa837p.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentSV5_2 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentSV5_2.class);

	public static final String SEGMENT_NAME = "SV5";
	public static final int FIELD_COUNT = 7;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private CompositeC003 Sv501;
	public CompositeC003 getSv501() { return Sv501; }
	public void setSv501(CompositeC003 val) { Sv501 = val; }

	private String Sv502;
	public String getSv502() { return Sv502; }
	public void setSv502(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'SV502' may not be null");
		}
		if (Field355.validateValue(val)) {
			Sv502 = val;
		} else {
			throw new IllegalArgumentException("Field 'SV502' cannot have value: " + val);
		}
	}

	private java.math.BigDecimal Sv503;
	public java.math.BigDecimal getSv503() { return Sv503; }
	public void setSv503(java.math.BigDecimal val) { Sv503 = val; }

	private java.math.BigDecimal Sv504;
	public java.math.BigDecimal getSv504() { return Sv504; }
	public void setSv504(java.math.BigDecimal val) { Sv504 = val; }

	private java.math.BigDecimal Sv505;
	public java.math.BigDecimal getSv505() { return Sv505; }
	public void setSv505(java.math.BigDecimal val) { Sv505 = val; }

	private String Sv506;
	public String getSv506() { return Sv506; }
	public void setSv506(String val) {
		if (Field594.validateValue(val)) {
			Sv506 = val;
		} else {
			throw new IllegalArgumentException("Field 'SV506' cannot have value: " + val);
		}
	}

	private String Sv507;
	public String getSv507() { return Sv507; }
	public void setSv507(String val) {
		if (Field923.validateValue(val)) {
			Sv507 = val;
		} else {
			throw new IllegalArgumentException("Field 'SV507' cannot have value: " + val);
		}
	}


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment SV5 on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		if (eis.checkBounds(fields, 1, true)) {
			Sv501 = new CompositeC003();
			Sv501.setOrdinal(ordinal + "-" + 1);
			Sv501.parse(eis, fields[1]);
		}
		if (Sv501 == null || "".equals(fields[1].trim())) {
			eis.addError("Field 'SV501' missing");
		}
		Sv502 = eis.getStringValue(fields, 2, 2, 2, true);
		Field355.validateInputValue(eis, "SV502", Sv502, ordinal, 2);
		if (Sv502 == null || "".equals(fields[2].trim())) {
			eis.addError("Field 'SV502' missing");
		}
		Sv503 = eis.getDecimalValue(fields, 3, true);
		if (Sv503 == null || "".equals(fields[3].trim())) {
			eis.addError("Field 'SV503' missing");
		}
		Sv504 = eis.getDecimalValue(fields, 4, false);
		Sv505 = eis.getDecimalValue(fields, 5, false);
		Sv506 = eis.getStringValue(fields, 6, 1, 1, false);
		Field594.validateInputValue(eis, "SV506", Sv506, ordinal, 6);
		Sv507 = eis.getStringValue(fields, 7, 1, 1, false);
		Field923.validateInputValue(eis, "SV507", Sv507, ordinal, 7);
		validate(eis);
	}

	protected void validate(EDIInputStream eis) {
		// REQUIRE_ONE_OF
		if (Sv504 == null && Sv505 == null) {
			eis.addError("Segment 'Sv5' requires at least one field of the following to be set: Sv504, Sv505");
		}

		// CONDITIONAL
		if (Sv506 != null) {
			if (Sv504 == null) {
				eis.addError("If 'Sv506' is set, the following must be set also: Sv504");
			}
		}

	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("SV5");
		if (Sv501 == null) {
			eos.addError("Emitting null mandatory field 'SV501'");
		}

		if (Sv501 != null) {
			Sv501.emit(eos);
		} else {
			eos.writeNullField();
		}
		if (Sv502 == null) {
			eos.addError("Emitting null mandatory field 'SV502'");
		}

		eos.writeField(Sv502);
		if (Sv503 == null) {
			eos.addError("Emitting null mandatory field 'SV503'");
		}

		eos.writeField(Sv503);
		eos.writeField(Sv504);
		eos.writeField(Sv505);
		eos.writeField(Sv506);
		eos.writeField(Sv507);
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentSV5_2 copy = new SegmentSV5_2();
		copy.setLineNumber(this.lineNumber);
		if (getSv501() != null) copy.setSv501((CompositeC003)getSv501().createCopy());
		copy.Sv502 = this.Sv502;
		copy.Sv503 = this.Sv503;
		copy.Sv504 = this.Sv504;
		copy.Sv505 = this.Sv505;
		copy.Sv506 = this.Sv506;
		copy.Sv507 = this.Sv507;
		return copy;
	}
}
