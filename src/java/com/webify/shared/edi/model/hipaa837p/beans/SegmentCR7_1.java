package com.webify.shared.edi.model.hipaa837p.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentCR7_1 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentCR7_1.class);

	public static final String SEGMENT_NAME = "CR7";
	public static final int FIELD_COUNT = 3;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private String Cr701;
	public String getCr701() { return Cr701; }
	public void setCr701(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'CR701' may not be null");
		}
		if (Field921.validateValue(val)) {
			Cr701 = val;
		} else {
			throw new IllegalArgumentException("Field 'CR701' cannot have value: " + val);
		}
	}

	private Integer Cr702;
	public Integer getCr702() { return Cr702; }
	public void setCr702(Integer val) { Cr702 = val; }

	private Integer Cr703;
	public Integer getCr703() { return Cr703; }
	public void setCr703(Integer val) { Cr703 = val; }


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment CR7 on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		Cr701 = eis.getStringValue(fields, 1, 2, 2, true);
		Field921.validateInputValue(eis, "CR701", Cr701, ordinal, 1);
		if (Cr701 == null || "".equals(fields[1].trim())) {
			eis.addError("Field 'CR701' missing");
		}
		Cr702 = eis.getIntegerValue(fields, 2, true);
		if (Cr702 == null || "".equals(fields[2].trim())) {
			eis.addError("Field 'CR702' missing");
		}
		Cr703 = eis.getIntegerValue(fields, 3, true);
		if (Cr703 == null || "".equals(fields[3].trim())) {
			eis.addError("Field 'CR703' missing");
		}
	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("CR7");
		if (Cr701 == null) {
			eos.addError("Emitting null mandatory field 'CR701'");
		}

		eos.writeField(Cr701);
		if (Cr702 == null) {
			eos.addError("Emitting null mandatory field 'CR702'");
		}

		eos.writeField(Cr702);
		if (Cr703 == null) {
			eos.addError("Emitting null mandatory field 'CR703'");
		}

		eos.writeField(Cr703);
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentCR7_1 copy = new SegmentCR7_1();
		copy.setLineNumber(this.lineNumber);
		copy.Cr701 = this.Cr701;
		copy.Cr702 = this.Cr702;
		copy.Cr703 = this.Cr703;
		return copy;
	}
}
