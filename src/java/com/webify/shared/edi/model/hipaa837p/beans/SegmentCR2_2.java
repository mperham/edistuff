package com.webify.shared.edi.model.hipaa837p.beans;

import com.webify.shared.edi.model.*;
import java.io.*;
import java.util.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/*
 * AUTOGENERATED FILE - DO NOT EDIT!!!
 */
public class SegmentCR2_2 implements EDIElement {
	private static final Log log = LogFactory.getLog(SegmentCR2_2.class);

	public static final String SEGMENT_NAME = "CR2";
	public static final int FIELD_COUNT = 12;

	private int lineNumber = 0;
	public int getLineNumber() { return lineNumber; }
	/** Do NOT use this method - it is not public by choice... */
	public void setLineNumber(int foo) { lineNumber = foo; }

	private int ordinal = 0;
	public int getOrdinal() { return ordinal; }
	void setOrdinal(int ord) { ordinal = ord; }

	// Fields
	private String Cr208;
	public String getCr208() { return Cr208; }
	public void setCr208(String val) {
		if (val == null) {
			throw new NullPointerException("Field 'CR208' may not be null");
		}
		if (Field1342.validateValue(val)) {
			Cr208 = val;
		} else {
			throw new IllegalArgumentException("Field 'CR208' cannot have value: " + val);
		}
	}

	private String Cr210;
	public String getCr210() { return Cr210; }
	public void setCr210(String val) { Cr210 = val; }

	private String Cr211;
	public String getCr211() { return Cr211; }
	public void setCr211(String val) { Cr211 = val; }

	private String Cr212;
	public String getCr212() { return Cr212; }
	public void setCr212(String val) {
		if (Field1073.validateValue(val)) {
			Cr212 = val;
		} else {
			throw new IllegalArgumentException("Field 'CR212' cannot have value: " + val);
		}
	}


	public void parse(EDIInputStream eis) throws IOException {
		lineNumber = eis.getCurrentSegmentNumber();
		if (log.isDebugEnabled()) log.debug("Starting segment CR2 on line " + lineNumber);
		String[] fields = eis.readSegment(SEGMENT_NAME, FIELD_COUNT);
		Cr208 = eis.getStringValue(fields, 8, 1, 1, true);
		Field1342.validateInputValue(eis, "CR208", Cr208, ordinal, 8);
		if (Cr208 == null || "".equals(fields[8].trim())) {
			eis.addError("Field 'CR208' missing");
		}
		Cr210 = eis.getStringValue(fields, 10, 1, 80, false);
		Cr211 = eis.getStringValue(fields, 11, 1, 80, false);
		Cr212 = eis.getStringValue(fields, 12, 1, 1, false);
		Field1073.validateInputValue(eis, "CR212", Cr212, ordinal, 12);
		validate(eis);
	}

	protected void validate(EDIInputStream eis) {
	}

	public void emit(EDIOutputStream eos) throws IOException {
		eos.startSegment("CR2");
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		eos.writeNullField();
		if (Cr208 == null) {
			eos.addError("Emitting null mandatory field 'CR208'");
		}

		eos.writeField(Cr208);
		eos.writeNullField();
		eos.writeField(Cr210);
		eos.writeField(Cr211);
		eos.writeField(Cr212);
		eos.endSegment();
	}

	public EDIElement createCopy() {
		SegmentCR2_2 copy = new SegmentCR2_2();
		copy.setLineNumber(this.lineNumber);
		copy.Cr208 = this.Cr208;
		copy.Cr210 = this.Cr210;
		copy.Cr211 = this.Cr211;
		copy.Cr212 = this.Cr212;
		return copy;
	}
}
